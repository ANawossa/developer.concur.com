{
	"swagger": "2.0",
	"info": {
		"description": "<b>Expense Report Service (ERS) is a v4 API for operations related to the creation and processing of Expense Reports</b>. Authorized use of the API requires a valid User JWT with `expense.report.readwrite` scope in the header of each request.<br/>",
		"version": "4.0.51",
		"title": "Expense Report Service - V4 API",
		"contact": {
			"name": "expensereportservice@sap.onmicrosoft.com",
			"email": "expensereportservice@sap.onmicrosoft.com"
		},
		"license": {
			"name": "SAP Concur"
		}
	},
	"host": "https://api.concursolutions.com/expensereports/v4",
	"basePath": "/",
	"tags": [{
		"name": "Reports",
		"description": "Reports API "
	}, {
		"name": "Expenses",
		"description": "Report Expenses API"
	}, {
		"name": "Allocations",
		"description": "Allocations API"
	}],
	"paths": {
		"/expensereports/v4/users/{userID}/context/{contextType}/reports/{reportId}": {
			"get": {
				"tags": ["Reports"],
				"summary": "Gets report details for the specified report.",
				"description": "Returns details for the specified report.",
				"operationId": "getReportDetailsUsingGET",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [{
					"name": "concur-correlationid",
					"in": "header",
					"description": "A unique identifier of the request (Minimum length: 6) - If not provided, a correlation ID will be generated",
					"required": false,
					"type": "string"
				}, {
					"name": "accept-language",
					"in": "header",
					"description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated",
					"required": false,
					"type": "string"
				}, {
					"name": "reportId",
					"in": "path",
					"description": "The unique identifier of the report",
					"required": true,
					"type": "string"
				}, {
					"name": "userId",
					"in": "path",
					"description": "The unique identifier of the Concur user who owns the report",
					"required": true,
					"type": "string"
				}, {
					"name": "contextType",
					"in": "path",
					"description": "The code which identifies the persona of the user who is accessing the resource",
					"required": true,
					"type": "string",
					"enum": ["TRAVELER"]
				}],
				"responses": {
					"200": {
						"description": "Report details successfully retrieved",
						"schema": {
							"$ref": "#/definitions/ReportDetails"
						}
					},
					"400": {
						"description": "Specified context not supported",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"401": {
						"description": "Missing or invalid authorization header",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"500": {
						"description": "Internal server error. Retry your request again",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"403": {
						"description": "Specified context type is invalid for this API. Review the documentation for supported context type,\nUser is not allowed to access this report ",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"404": {
						"description": "reportId not found",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					}
				}
			},
			"patch": {
				"tags": ["Reports"],
				"summary": "Updates the specified report",
				"description": "Updates the specified report.",
				"operationId": "updateReportUsingPATCH",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [{
					"name": "concur-correlationid",
					"in": "header",
					"description": "A unique identifier of the request (Minimum length: 6) - If not provided, a correlation ID will be generated",
					"required": false,
					"type": "string"
				}, {
					"name": "accept-language",
					"in": "header",
					"description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated",
					"required": false,
					"type": "string"
				}, {
					"name": "reportId",
					"in": "path",
					"description": "The unique identifier of the report",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "report",
					"description": "Report body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/UpdateReport"
					}
				}, {
					"name": "userId",
					"in": "path",
					"description": "The unique identifier of the Concur user who owns the report",
					"required": true,
					"type": "string"
				}, {
					"name": "contextType",
					"in": "path",
					"description": "The code which identifies the persona of the user who is accessing the resource",
					"required": true,
					"type": "string",
					"enum": ["TRAVELER"]
				}],
				"responses": {
					"400": {
						"description": "Specified context not supported,\nInvalid field value specified,\nUser does not have proper role",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"401": {
						"description": "Missing or invalid authorization header",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"500": {
						"description": "Internal server error. Retry your request again",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"204": {
						"description": "Report successfully updated"
					},
					"403": {
						"description": "Specified context type is invalid for this API. Review the documentation for supported context type",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"404": {
						"description": "reportId not found",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					}
				}
			}
		},
		"/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/allocations/{allocationId}": {
			"get": {
				"tags": ["Allocations"],
				"summary": "Gets specified allocation for a specific report.",
				"description": "Returns specified allocation for a specific report.",
				"operationId": "getAllocationByIdUsingGET",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [{
					"name": "concur-correlationid",
					"in": "header",
					"description": "A unique identifier of the request (Minimum length: 6) - If not provided, a correlation ID will be generated",
					"required": false,
					"type": "string"
				}, {
					"name": "accept-language",
					"in": "header",
					"description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated",
					"required": false,
					"type": "string"
				}, {
					"name": "reportId",
					"in": "path",
					"description": "The unique identifier of the report",
					"required": true,
					"type": "string"
				}, {
					"name": "allocationId",
					"in": "path",
					"description": "The unique identifier of the expense allocation",
					"required": true,
					"type": "string"
				}, {
					"name": "userId",
					"in": "path",
					"description": "The unique identifier of the Concur user who owns the report",
					"required": true,
					"type": "string"
				}, {
					"name": "contextType",
					"in": "path",
					"description": "The code which identifies the persona of the user who is accessing the resource",
					"required": true,
					"type": "string",
					"enum": ["TRAVELER"]
				}],
				"responses": {
					"200": {
						"description": "Allocation successfully retrieved",
						"schema": {
							"$ref": "#/definitions/ReportAllocationResponse"
						}
					},
					"400": {
						"description": "Invalid expenseId\n\nallocationId is invalid",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"401": {
						"description": "Missing or invalid authorization header",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"500": {
						"description": "Internal server error. Retry your request again",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"403": {
						"description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not authorized to access this report with this context type",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"404": {
						"description": "reportId not found\n\nallocationId not found",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					}
				}
			},
			"patch": {
				"tags": ["Allocations"],
				"summary": "Updates the specified allocation for the specific report",
				"description": "Updates the specified allocation for the specific report.",
				"operationId": "updateAllocationUsingPATCH",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [{
					"name": "concur-correlationid",
					"in": "header",
					"description": "A unique identifier of the request (Minimum length: 6) - If not provided, a correlation ID will be generated",
					"required": false,
					"type": "string"
				}, {
					"name": "accept-language",
					"in": "header",
					"description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated",
					"required": false,
					"type": "string"
				}, {
					"name": "reportId",
					"in": "path",
					"description": "The unique identifier of the report that contains the expense associated with the allocations",
					"required": true,
					"type": "string"
				}, {
					"name": "allocationId",
					"in": "path",
					"description": "The unique identifier of the expense allocation",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "allocationData",
					"description": "Allocation data",
					"required": true,
					"schema": {
						"$ref": "#/definitions/UpdateReportAllocation"
					}
				}, {
					"name": "userId",
					"in": "path",
					"description": "The unique identifier of the Concur user who owns the report",
					"required": true,
					"type": "string"
				}, {
					"name": "contextType",
					"in": "path",
					"description": "The code which identifies the persona of the user who is patching the resource",
					"required": true,
					"type": "string",
					"enum": ["TRAVELER"]
				}],
				"responses": {
					"400": {
						"description": "Invalid field value specified\n\nInvalid expenseId\n\nallocationId is invalid\n\nUser does not have proper role",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"401": {
						"description": "Missing or invalid authorization header",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"500": {
						"description": "Internal server error. Retry your request again",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"204": {
						"description": "Successfully updated the allocation"
					},
					"403": {
						"description": "Specified context type is invalid for this API. Review the documentation for supported context type\n\nUser is not authorized to access this report with this context type",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"404": {
						"description": "reportId not found\n\nallocationId not found\n\nexpenseId not found\n\nThe policy of the specified report does not have an allocation form defined. Contact your Concur Administrator",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					}
				}
			}
		},
		"/expensereports/v4/users/{userId}/context/{contextType}/reports/{reportId}/expenses/{expenseId}": {
			"get": {
				"tags": ["Expenses"],
				"summary": "Gets details for the specified expense",
				"description": "Returns details for the specified expense.",
				"operationId": "getReportExpenseDetailUsingGET",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [{
					"name": "concur-correlationid",
					"in": "header",
					"description": "The unique identifier of the consumer making the API calls. Minimum length: 6 characters",
					"required": false,
					"type": "string"
				}, {
					"name": "accept-language",
					"in": "header",
					"description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated",
					"required": false,
					"type": "string"
				}, {
					"name": "reportId",
					"in": "path",
					"description": "The unique identifier of the report",
					"required": true,
					"type": "string"
				}, {
					"name": "expenseId",
					"in": "path",
					"description": "The unique identifier of the expense",
					"required": true,
					"type": "string"
				}, {
					"name": "userId",
					"in": "path",
					"description": "The unique identifier of the Concur user who owns the report",
					"required": true,
					"type": "string"
				}, {
					"name": "contextType",
					"in": "path",
					"description": "The code which identifies the persona of the user who is accessing the resource",
					"required": true,
					"type": "string",
					"enum": ["TRAVELER"]
				}],
				"responses": {
					"200": {
						"description": "Expense details successfully retrieved",
						"schema": {
							"$ref": "#/definitions/ReportExpenseDetail"
						}
					},
					"400": {
						"description": "Specified context not supported",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"401": {
						"description": "Missing or invalid authorization header",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"500": {
						"description": "Internal server error. Retry your request again",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"403": {
						"description": "Specified context type is invalid for this API. Review the documentation for supported context type,\nUser is not allowed to access this report ",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"404": {
						"description": "reportId not found,\nexpenseId not found",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					}
				}
			},
			"patch": {
				"tags": ["Expenses"],
				"summary": "Updates the specified expense",
				"description": "Updates the specified expense.",
				"operationId": "updateReportExpenseUsingPATCH",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [{
					"name": "concur-correlationid",
					"in": "header",
					"description": "The unique identifier of the consumer making the API calls. Minimum length: 6 characters",
					"required": false,
					"type": "string"
				}, {
					"name": "accept-language",
					"in": "header",
					"description": "The unique identifier of the user's locale that indicates the language in which the API response should be formulated",
					"required": false,
					"type": "string"
				}, {
					"name": "reportId",
					"in": "path",
					"description": "The unique identifier of the report",
					"required": true,
					"type": "string"
				}, {
					"name": "expenseId",
					"in": "path",
					"description": "The unique identifier of the expense",
					"required": true,
					"type": "string"
				}, {
					"in": "body",
					"name": "expenseData",
					"description": "Expense data",
					"required": true,
					"schema": {
						"$ref": "#/definitions/UpdateReportExpense"
					}
				}, {
					"name": "userId",
					"in": "path",
					"description": "TThe unique identifier of the Concur user who owns the report",
					"required": true,
					"type": "string"
				}, {
					"name": "contextType",
					"in": "path",
					"description": "The access level of the Concur user, which determines the form fields they can view/modify",
					"required": true,
					"type": "string",
					"enum": ["TRAVELER", "PROXY", "MANAGER", "PROCESSOR"]
				}],
				"responses": {
					"400": {
						"description": "Specified context not supported,\nInvalid field value specified,\nUser does not have proper role",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"401": {
						"description": "Missing or invalid authorization header",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"500": {
						"description": "Internal server error. Retry your request again",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"204": {
						"description": "Successfully updated the report expense"
					},
					"403": {
						"description": "Specified context type is invalid for this API. Review the documentation for supported context type,\nUser is not allowed to modify this report ",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					},
					"404": {
						"description": "reportId not found,\nexpenseId not found",
						"schema": {
							"$ref": "#/definitions/ErrorMessage"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"ExpenseAttendeeResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the Expense Attendee association"
				}
			}
		},
		"HotelEReceipt": {
			"type": "object",
			"properties": {
				"calculatedDailyRate": {
					"type": "number",
					"format": "double",
					"description": "The calculated hotel daily rate"
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The hotel checkout date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"locationId": {
					"type": "string",
					"description": "The unique identifier of the location for this hotel"
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The hotel checkin date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"totalAmountPaid": {
					"description": "The total amount paid",
					"$ref": "#/definitions/Amount"
				},
				"vendorName": {
					"type": "string",
					"description": "The name of the hotel vendor. Maximum length: 255 characters. Examples: 'Hilton', 'Four Points by Sheraton, Seattle'"
				}
			}
		},
		"CompanyDisbursements": {
			"type": "object",
			"required": ["dueEmployee"],
			"properties": {
				"cashAdvanceUtilized": {
					"description": "Total of cash advance utilized",
					"$ref": "#/definitions/Amount"
				},
				"dueEmployee": {
					"description": "Total amount due employee",
					"$ref": "#/definitions/Amount"
				},
				"otherDisbursements": {
					"type": "array",
					"description": "Other company disbursements",
					"items": {
						"$ref": "#/definitions/Disbursement"
					}
				},
				"totalUtilizedBalanceDue": {
					"description": "Total utilized amount due company from prior reports",
					"$ref": "#/definitions/Amount"
				}
			}
		},
		"AssociateImageToExpense": {
			"type": "object",
			"required": ["receiptImageId"],
			"properties": {
				"isImageAppend": {
					"type": "boolean",
					"description": "Whether the image should be appended to the existing image that is already on the expense, if there is one"
				},
				"receiptImageId": {
					"type": "string",
					"description": "The unique identifier of the image that needs to be associated to the expense"
				}
			}
		},
		"NewReportResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the report"
				}
			}
		},
		"ExpenseAttendeesWithAmounts": {
			"type": "object",
			"properties": {
				"expenseAttendeeList": {
					"type": "array",
					"description": "The list of attendees associated with the expense. Maximum attendees: 500",
					"items": {
						"$ref": "#/definitions/ExpenseAttendeeWithAmounts"
					}
				},
				"noShowAttendeeCount": {
					"type": "integer",
					"format": "int32",
					"description": "The number of attendees that were planned but did not show up. Default value: 0"
				}
			}
		},
		"PagedResources«ReportList»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReportList"
					}
				},
				"links": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			}
		},
		"AllocationFormField": {
			"type": "object",
			"required": ["controlType", "dataType", "fieldAccess", "fieldId", "fieldName", "fieldSequence", "formFieldId", "isRequired", "requiredForAutoSave"],
			"properties": {
				"controlType": {
					"type": "string",
					"description": "The control type for the form field",
					"enum": ["Checkbox", "DateEdit", "Edit", "ListEdit", "MultiPicklist", "Picklist", "TextArea", "Time", "LaunchUrlSingle", "LaunchUrlMulti"]
				},
				"dataType": {
					"type": "string",
					"description": "The data type for the form field",
					"enum": ["Amount", "Boolean", "ConnectedList", "Date", "Integer", "List", "Numeric", "String"]
				},
				"defaultValue": {
					"description": "The source or content of the default value for the form field",
					"$ref": "#/definitions/CustomField"
				},
				"fieldAccess": {
					"type": "string",
					"description": "The supplied user’s access to the form field",
					"enum": ["HD=hidden", "RO=read-only", "RW=read-write"]
				},
				"fieldId": {
					"type": "string",
					"description": "The field id"
				},
				"fieldName": {
					"type": "string",
					"description": "The label of the form field"
				},
				"fieldSequence": {
					"type": "integer",
					"format": "int32",
					"description": "The field location in the numerical order of the form fields on the form"
				},
				"formFieldId": {
					"type": "string",
					"description": "The unique identifier of the form field"
				},
				"isRequired": {
					"type": "boolean",
					"description": "Whether a value is required for the form field"
				},
				"itemizationCopyDownAction": {
					"type": "string",
					"description": "Itemization Copy Down Action Only used by the child entries of itemizations. = ['ParentExpense', 'ChildExpense', 'None']"
				},
				"listId": {
					"type": "string",
					"description": "The unique identifier of the source list to be used for this form field"
				},
				"listLevel": {
					"type": "integer",
					"format": "int32",
					"description": "For connected list, the hierarchical position of this field in the list. For simple list or non-list items, this value will be blank"
				},
				"maximumLength": {
					"type": "integer",
					"format": "int32",
					"description": "The maximum length allowed for the form field"
				},
				"parentFieldId": {
					"type": "string",
					"description": " For connected list, the form field of the previous segment. For simple list or non-list items, this value will be blank"
				},
				"requiredForAutoSave": {
					"type": "boolean",
					"description": "A boolean value which indicates if this field is required to be populated to perform a save even if all required field values are not provided."
				},
				"targetFieldSettings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TargetFieldSetting"
					}
				},
				"tooltip": {
					"type": "string",
					"description": "The tool tip value of the form field"
				},
				"validationExpression": {
					"type": "string",
					"description": "The validation expression (Regular Expression) associated with the form field"
				},
				"validationMessage": {
					"type": "string",
					"description": "The failure message for the form field validation"
				}
			}
		},
		"ReportExpenseSummary": {
			"type": "object",
			"required": ["allocationState", "exchangeRate", "expenseId", "expenseType", "hasBlockingExceptions", "hasExceptions", "hasMissingReceiptDeclaration", "isAutoCreated", "isImageRequired", "isPaperReceiptRequired", "isPersonalExpense", "paymentType", "postedAmount", "transactionAmount"],
			"properties": {
				"allocationSetId": {
					"type": "string",
					"description": "The identifier of the Allocation set associated with the expense. Allocations which belong to the same set were created at the same time."
				},
				"allocationState": {
					"type": "string",
					"description": "Allocation state for the expense. Possible values: 'FULLY_ALLOCATED', 'NOT_ALLOCATED', 'PARTIALLY_ALLOCATED'"
				},
				"approvedAmount": {
					"description": "The approved amount of the expense, in the report currency",
					"$ref": "#/definitions/Amount"
				},
				"approverAdjustedAmount": {
					"description": "The total amount adjusted for the expense by the approver",
					"$ref": "#/definitions/Amount"
				},
				"attendeeCount": {
					"type": "integer",
					"format": "int32",
					"description": "The total number of attendees associated with the expense"
				},
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user"
				},
				"claimedAmount": {
					"description": "The total non-personal amount claimed for reimbursement for the expense",
					"$ref": "#/definitions/Amount"
				},
				"ereceiptImageId": {
					"type": "string",
					"description": "The unique identifier of the eReceipt image associated with the expense"
				},
				"exchangeRate": {
					"description": "Exchange rate data for the expense. Please refer to the 'ExchangeRate' object for more information",
					"$ref": "#/definitions/ExchangeRate"
				},
				"expenseId": {
					"type": "string",
					"description": "The unique identifier for the expense"
				},
				"expenseSourceIdentifiers": {
					"description": "The list of expense sources associated with the expense",
					"$ref": "#/definitions/ExpenseSourceIdentifiers"
				},
				"expenseType": {
					"description": "The expense type information for the expense. Please refer to the 'ExpenseType' object for more information",
					"$ref": "#/definitions/ExpenseType"
				},
				"hasBlockingExceptions": {
					"type": "boolean",
					"description": "Whether the expense has any exceptions that blocks it from being submitted"
				},
				"hasExceptions": {
					"type": "boolean",
					"description": "Whether the expense has any exceptions"
				},
				"hasMissingReceiptDeclaration": {
					"type": "boolean",
					"description": "Whether the expense has an affidavit declaration for missing receipt"
				},
				"imageCertificationStatus": {
					"type": "string",
					"description": "The final status of the receipt image associated with the expense. Possible values: Refer [Receipts Status V4 API](https://github.concur.com/receipts/receipt-service/wiki/GRDC-API-Docs#possible-digitizationstatus-codes)"
				},
				"isAutoCreated": {
					"type": "boolean",
					"description": "Whether the expense is auto created"
				},
				"isImageRequired": {
					"type": "boolean",
					"description": "Whether the image is required for the expense"
				},
				"isPaperReceiptRequired": {
					"type": "boolean",
					"description": "Whether the paper receipt is required for the expense to be submitted"
				},
				"isPersonalExpense": {
					"type": "boolean",
					"description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user"
				},
				"links": {
					"type": "array",
					"description": "Resource links related to this call",
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"location": {
					"description": "The location information of the expense. Please refer to the 'Location' object for more information",
					"$ref": "#/definitions/Location"
				},
				"paymentType": {
					"description": "The payment type information for the expense. Please refer to the 'PaymentType' object for more information",
					"$ref": "#/definitions/PaymentType"
				},
				"postedAmount": {
					"description": "The amount of the expense, in the report currency",
					"$ref": "#/definitions/Amount"
				},
				"receiptImageId": {
					"type": "string",
					"description": "The unique identifier of the image associated with the expense"
				},
				"ticketNumber": {
					"type": "string",
					"description": "The ticket number associated with the travel"
				},
				"transactionAmount": {
					"description": "The amount of the expense, in the transaction currency paid to the vendor",
					"$ref": "#/definitions/Amount"
				},
				"transactionDate": {
					"type": "string",
					"format": "date",
					"description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"travelAllowance": {
					"description": "The travel allowance data associated with the expense. Please refer to the 'TravelAllowance' object for more information",
					"$ref": "#/definitions/TravelAllowance"
				},
				"vendor": {
					"description": "The vendor information for the expense. Please refer to the 'Vendor' object for more information",
					"$ref": "#/definitions/Vendor"
				}
			}
		},
		"AllocationFavoriteEntry": {
			"type": "object",
			"required": ["percentage"],
			"properties": {
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"percentage": {
					"type": "number",
					"format": "double",
					"description": "Percentage of the total expense that the allocation represents"
				}
			},
			"description": "An Allocation Entry which comprises a percentage of the Allocation Favorite"
		},
		"ReportTotals": {
			"type": "object",
			"required": ["claimedAmount", "companyDisbursements", "employeeDisbursements", "isCashAdvanceReturnedOnCard", "personalAmount", "rejectedAmount", "reportTotal"],
			"properties": {
				"approvedAmount": {
					"description": "The total amount approved",
					"$ref": "#/definitions/Amount"
				},
				"cashAdvanceReturnsAmount": {
					"description": "The portion of the cash advance returned by the employee",
					"$ref": "#/definitions/Amount"
				},
				"claimedAmount": {
					"description": "The report total minus the personal amount",
					"$ref": "#/definitions/Amount"
				},
				"companyDisbursements": {
					"description": "Company disbursements",
					"$ref": "#/definitions/CompanyDisbursements"
				},
				"employeeDisbursements": {
					"description": "Employee disbursements",
					"$ref": "#/definitions/EmployeeDisbursements"
				},
				"isCashAdvanceReturnedOnCard": {
					"type": "boolean",
					"description": "Whether the attribute determines if the user returned the remaining cash advance to the card directly. "
				},
				"personalAmount": {
					"description": "The total of the expenses marked as personal",
					"$ref": "#/definitions/Amount"
				},
				"redirectFund": {
					"description": "Payment redirected to card at user's request",
					"$ref": "#/definitions/RedirectFund"
				},
				"rejectedAmount": {
					"description": "The total amount not approved",
					"$ref": "#/definitions/Amount"
				},
				"reportTotal": {
					"description": "The total of the expenses on the expense report",
					"$ref": "#/definitions/Amount"
				},
				"utilizedBalanceDues": {
					"type": "array",
					"description": "List of utilized amount due company from prior reports",
					"items": {
						"$ref": "#/definitions/UtilizedBalanceDue"
					}
				}
			}
		},
		"SmartExpense": {
			"type": "object",
			"properties": {
				"creditCardTransactionId": {
					"type": "string",
					"description": "The unique identifier of the credit card transaction (indexed transactionId) associated with the expense"
				},
				"ereceipt": {
					"description": "EReceipt information for the expense. Please refer to the 'EReceipt' object for more information",
					"$ref": "#/definitions/EReceipt"
				},
				"expenseAttendees": {
					"description": "The attendee details associated with the smart expense. Please refer to the 'ExpenseAttendees' object for more information",
					"$ref": "#/definitions/ExpenseAttendees"
				},
				"isAutoCreated": {
					"type": "boolean",
					"description": "Whether this expense is auto created. This element only applies to POST expense request. Default value: false"
				},
				"personalCardTransactionId": {
					"type": "string",
					"description": "The unique identifier of the personal card transaction associated with the expense"
				},
				"quickExpenseId": {
					"type": "string",
					"description": "The unique identifier of the mobile expense associated with the expense. When 'quickExpenseId' is specified, 'exchangeRate.value' field value will be ignored and it's value will be read from exchange rate currency service but 'exchangeRate.operation' will still be honored"
				},
				"trip": {
					"description": "Trip data associated with the expense. Please refer to the 'Trip' object for more information",
					"$ref": "#/definitions/Trip"
				}
			}
		},
		"ReportToApprove": {
			"type": "object",
			"required": ["amountDueEmployee", "claimedAmount", "employee", "hasExceptions", "link", "name", "reportDate", "reportId", "reportType", "submitDate"],
			"properties": {
				"amountDueEmployee": {
					"description": "The amount that the company owes the employee",
					"$ref": "#/definitions/Amount"
				},
				"claimedAmount": {
					"description": "The total amount of all non-personal expenses in the report",
					"$ref": "#/definitions/Amount"
				},
				"employee": {
					"description": "The report owner's name, for whom the report is pending approval",
					"$ref": "#/definitions/Employee"
				},
				"hasExceptions": {
					"type": "boolean",
					"description": "Whether the Report has any exceptions"
				},
				"link": {
					"description": "Resource link to the report",
					"$ref": "#/definitions/Link"
				},
				"name": {
					"type": "string",
					"description": "The name of the expense report"
				},
				"reportDate": {
					"type": "string",
					"format": "date",
					"description": "The date (ISO-8601) assigned to the report by the user (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"reportId": {
					"type": "string",
					"description": "The unique identifier for the report resource"
				},
				"reportType": {
					"type": "string",
					"description": "This value identifies the method used to create the report. Statement refers to company billed statement reports and Auto-created refers to reports created by Expense Assistant.",
					"enum": ["Regular", "Reconciliation", "Statement", "AutoCreated"]
				},
				"submitDate": {
					"type": "string",
					"format": "date",
					"description": "The date (ISO-8601) the report was submitted by the user (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				}
			}
		},
		"MoveExpense": {
			"type": "object",
			"required": ["targetReportId"],
			"properties": {
				"targetReportId": {
					"type": "string",
					"description": "ReportId of the destination report"
				}
			}
		},
		"TaxData": {
			"type": "object",
			"required": ["expenseTax1"],
			"properties": {
				"expenseTax1": {
					"description": "The tax data for the expense. Please refer to the 'ExpenseTax' object for more information",
					"$ref": "#/definitions/ExpenseTaxData"
				},
				"expenseTax2": {
					"description": "The tax data for the expense. Please refer to the 'ExpenseTax' object for more information",
					"$ref": "#/definitions/ExpenseTaxData"
				}
			}
		},
		"ValidationError": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"description": "The id of the validation error"
				},
				"message": {
					"type": "string",
					"description": "The detailed message of the validation error"
				},
				"source": {
					"type": "string",
					"description": "The type of validation which failed"
				}
			}
		},
		"AuditTrail": {
			"type": "object",
			"required": ["action", "date", "description", "type"],
			"properties": {
				"action": {
					"type": "string"
				},
				"author": {
					"$ref": "#/definitions/Employee"
				},
				"date": {
					"type": "string",
					"format": "date-time",
					"description": "The UTC datetime of when the audit was recorded (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ"
				},
				"description": {
					"$ref": "#/definitions/Description"
				},
				"externalUpdate": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["Report", "Expense"]
				}
			}
		},
		"ExpenseTax": {
			"type": "object",
			"required": ["taxAuthorityId"],
			"properties": {
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"reclaimCode": {
					"type": "string",
					"description": "The tax reclaim code. Maximum length: 20 characters"
				},
				"reclaimTransactionAmount": {
					"type": "number",
					"format": "double",
					"description": "The tax reclaim transaction amount"
				},
				"taxAuthorityId": {
					"type": "string",
					"description": "The unique identifier of the tax authority"
				},
				"taxAuthorityName": {
					"type": "string",
					"description": "The name of the tax authority"
				},
				"taxCode": {
					"type": "string",
					"description": "The tax code. Maximum length: 20 characters"
				},
				"taxFormId": {
					"type": "string",
					"description": "The unique identifier of the tax form associated with the expense"
				},
				"taxRateTypeId": {
					"type": "string",
					"description": "The unique identifier of the tax rate type"
				},
				"taxRateTypeName": {
					"type": "string",
					"description": "The name of the tax rate type"
				},
				"taxReclaimConfigurationId": {
					"type": "string",
					"description": "The unique identifier of the tax reclaim configuration"
				},
				"taxTransactionAmount": {
					"type": "number",
					"format": "double",
					"description": "The tax transaction amount"
				}
			}
		},
		"AllocationsPostResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"hasExpenseExceptions": {
					"type": "boolean",
					"description": "Indicates whether this expense has any exceptions. Format: true or false"
				},
				"uri": {
					"type": "string",
					"description": "Uri of the allocations for the expense"
				}
			}
		},
		"CostObjectExpenseId": {
			"type": "object",
			"required": ["expenseId"],
			"properties": {
				"alloctionIds": {
					"type": "array",
					"description": "The list of unique allocation identifiers for the expense",
					"items": {
						"type": "string"
					}
				},
				"expenseId": {
					"type": "string",
					"description": "The unique identifier for the expense"
				}
			}
		},
		"NewWorkflowStepInstance": {
			"type": "object",
			"required": ["sequenceOrder", "stepId"],
			"properties": {
				"approverId": {
					"type": "string",
					"description": "Approver employee identifier"
				},
				"isDeleted": {
					"type": "boolean",
					"description": "Boolean indicating if this step has been deleted"
				},
				"isUserAdded": {
					"type": "boolean",
					"description": "Boolean indicating if this step is added by user"
				},
				"sequenceOrder": {
					"type": "integer",
					"format": "int32",
					"description": "Sequence of this step in the workflow"
				},
				"stepId": {
					"type": "string",
					"description": "Identifier of the step that this is an instance of"
				},
				"subWorkflowInstances": {
					"type": "array",
					"description": "List of sub workflow instances, for example, cost object workflows",
					"items": {
						"$ref": "#/definitions/NewWorkflowInstance"
					}
				}
			}
		},
		"UpdateWorkflowStepInstance": {
			"type": "object",
			"required": ["sequenceOrder", "stepId"],
			"properties": {
				"approverId": {
					"type": "string",
					"description": "Approver employee identifier"
				},
				"isDeleted": {
					"type": "boolean",
					"description": "Boolean indicating if this step has been deleted"
				},
				"isUserAdded": {
					"type": "boolean",
					"description": "Boolean indicating if this step is added by user"
				},
				"sequenceOrder": {
					"type": "integer",
					"format": "int32",
					"description": "Sequence of this step in the workflow"
				},
				"stepId": {
					"type": "string",
					"description": "Identifier of the step that this is an instance of"
				},
				"stepInstanceId": {
					"type": "string",
					"description": "Step instance identifier, may be null for a user added step"
				},
				"subWorkflowInstances": {
					"type": "array",
					"description": "List of sub workflow instances, for example, cost object workflows",
					"items": {
						"$ref": "#/definitions/UpdateWorkflowInstance"
					}
				}
			}
		},
		"Mileage": {
			"type": "object",
			"required": ["totalDistance", "vehicleId"],
			"properties": {
				"odometerEnd": {
					"type": "integer",
					"format": "int32",
					"description": "The odometer reading at the end of the journey"
				},
				"odometerStart": {
					"type": "integer",
					"format": "int32",
					"description": "The odometer reading at the start of the journey"
				},
				"passengerCount": {
					"type": "integer",
					"format": "int32",
					"description": "The number of passengers in the vehicle during the journey"
				},
				"personalDistance": {
					"type": "integer",
					"format": "int32",
					"description": "The portion of the journey attributed to personal use. Default value: 0"
				},
				"routeId": {
					"type": "string",
					"description": "The unique identifier of the route for this journey"
				},
				"totalDistance": {
					"type": "integer",
					"format": "int32",
					"description": "The total distance for this journey"
				},
				"vehicleId": {
					"type": "string",
					"description": "The unique identifier for the vehicle used for this journey"
				}
			}
		},
		"ExpenseType": {
			"type": "object",
			"required": ["id"],
			"properties": {
				"code": {
					"type": "string",
					"description": "The code of the expense type"
				},
				"id": {
					"type": "string",
					"description": "The unique identifier of the expense type. Maximum length: 5 characters. Example: 'BRKFT'"
				},
				"isDeleted": {
					"type": "boolean",
					"description": "Whether the expense type returned is deleted or not."
				},
				"name": {
					"type": "string",
					"description": "The name of the expense type (localized as per `accept-language` header)"
				}
			}
		},
		"ExpenseAttendeeWithAmounts": {
			"type": "object",
			"required": ["approvedAmount", "attendeeId", "transactionAmount"],
			"properties": {
				"approvedAmount": {
					"description": "The approved amount assigned to this attendee, in the report currency",
					"$ref": "#/definitions/Amount"
				},
				"associatedAttendeeCount": {
					"type": "integer",
					"format": "int32",
					"description": "The count of total attendees. A count greater than 1 means there are unnamed attendees associated with this expense-attendee record. Default value: 1"
				},
				"attendeeId": {
					"type": "string",
					"description": "The unique identifier of the associated expense attendee within Concur"
				},
				"customData": {
					"type": "array",
					"description": "The set of data the custom fields contain for the attendee based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"isAmountUserEdited": {
					"type": "boolean",
					"description": "This field indicates if the amount value for the attendee on this expense was ever manually edited by the end user. Default value: false"
				},
				"isTraveling": {
					"type": "boolean",
					"description": "Whether the attendee was traveling when the expense was incurred, used for FBT tax calculations"
				},
				"transactionAmount": {
					"description": "The portion of the expense transaction amount assigned to this attendee for both individual expense tracking and attendee totals across time periods",
					"$ref": "#/definitions/Amount"
				},
				"versionNumber": {
					"type": "integer",
					"format": "int32",
					"description": "The version number of the attendee. This field value may always be 1, depending on the configuration. Default value: 1"
				}
			}
		},
		"AssociateImage": {
			"type": "object",
			"required": ["receiptImageId"],
			"properties": {
				"receiptImageId": {
					"type": "string",
					"description": "The Id of the image to associate to the report header"
				}
			}
		},
		"UpdateWorkflowInstance": {
			"type": "object",
			"required": ["processInstanceId", "stepInstances"],
			"properties": {
				"processInstanceId": {
					"type": "string",
					"description": "Workflow instance id"
				},
				"stepInstances": {
					"type": "array",
					"description": "Steps in the workflow instance",
					"items": {
						"$ref": "#/definitions/UpdateWorkflowStepInstance"
					}
				}
			}
		},
		"TravelDiary": {
			"type": "object",
			"required": ["activityEndDate", "activityLocation", "activityPurpose", "activityStartDate", "link"],
			"properties": {
				"activityEndDate": {
					"type": "string",
					"format": "date-time",
					"description": "The end date (ISO-8601) of the traveldiary as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"activityLocation": {
					"type": "string",
					"description": "Location of the travel diary "
				},
				"activityPurpose": {
					"type": "string",
					"description": "Purpose of the travel "
				},
				"activityStartDate": {
					"type": "string",
					"format": "date-time",
					"description": "The start date (ISO-8601) of the traveldiary as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"link": {
					"description": "Resource link to the travelDiary",
					"$ref": "#/definitions/Link"
				},
				"travelDiaryId": {
					"type": "string"
				}
			}
		},
		"Employee": {
			"type": "object",
			"properties": {
				"firstName": {
					"type": "string",
					"description": "First name"
				},
				"lastName": {
					"type": "string",
					"description": "Last name"
				},
				"middleInitial": {
					"type": "string",
					"description": "Middle initial"
				}
			}
		},
		"ReportAllocations": {
			"type": "object",
			"required": ["expenseIds"],
			"properties": {
				"allocations": {
					"type": "array",
					"description": "This is an array of allocation objects to be created or updated. Maximum allocations: 500",
					"items": {
						"$ref": "#/definitions/NewReportAllocation"
					}
				},
				"expenseIds": {
					"type": "array",
					"description": "This is an array of unique identifiers of expenses within this report that are being allocated",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"MoveExpenseResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the expense after successful move operation"
				}
			}
		},
		"RecallReportRequest": {
			"type": "object",
			"properties": {
				"reportSource": {
					"type": "string",
					"description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TR", "UI"]
				}
			}
		},
		"Link": {
			"type": "object",
			"required": ["href", "isTemplated", "method", "rel"],
			"properties": {
				"deprecation": {
					"type": "string"
				},
				"href": {
					"type": "string",
					"description": "The URL of the related HATEOAS link that you can use for subsequent calls"
				},
				"hreflang": {
					"type": "string"
				},
				"isTemplated": {
					"type": "boolean",
					"description": "Whether the href is parameterized"
				},
				"media": {
					"type": "string"
				},
				"method": {
					"type": "string",
					"description": "The HTTP method required for the related call"
				},
				"rel": {
					"type": "string",
					"description": "The link relationship that describes how the href relates to the API call"
				},
				"title": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PageMetadata": {
			"type": "object",
			"properties": {
				"number": {
					"type": "integer",
					"format": "int64"
				},
				"size": {
					"type": "integer",
					"format": "int64"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"Description": {
			"type": "object",
			"required": ["key", "values"],
			"properties": {
				"key": {
					"type": "string"
				},
				"values": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				}
			}
		},
		"CostObject": {
			"type": "object",
			"required": ["approvedAmount", "approver", "claimedAmount", "costObjectExpenseIds", "hierarchyNodeId", "name"],
			"properties": {
				"approvedAmount": {
					"description": "The approved amount of the expense, in the report currency",
					"$ref": "#/definitions/Amount"
				},
				"approver": {
					"description": "The approver details",
					"$ref": "#/definitions/Employee"
				},
				"claimedAmount": {
					"description": "The total non-personal amount claimed for reimbursement for the expense, in the report currency",
					"$ref": "#/definitions/Amount"
				},
				"costObjectExpenseIds": {
					"type": "array",
					"description": "Assigned unique indenfier for cost object",
					"items": {
						"$ref": "#/definitions/CostObjectExpenseId"
					}
				},
				"hierarchyNodeId": {
					"type": "string",
					"description": "The unique identifier of the group hierarchy node for the report resource"
				},
				"isCostObjectOwnedByUser": {
					"type": "boolean",
					"description": "Whether the Cost Object is the responsibility of the API caller. The cost object could be previously approved or pending approval by the API caller."
				},
				"name": {
					"type": "string",
					"description": "The name fo the Cost Object"
				}
			}
		},
		"UpdateReport": {
			"type": "object",
			"required": ["reportSource"],
			"properties": {
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user"
				},
				"comment": {
					"type": "string",
					"description": "The expense report comment added by the user"
				},
				"country": {
					"type": "string",
					"description": "The country name associated with the report (localized as per `accept-language` header)"
				},
				"countryCode": {
					"type": "string",
					"description": "The location country ISO 3166-1 code (https://en.wikipedia.org/wiki/ISO_3166-1)"
				},
				"countrySubDivisionCode": {
					"type": "string",
					"description": "The location country sub division ISO 3166-2 code (https://en.wikipedia.org/wiki/ISO_3166-2)"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The end date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"isCopyDownInherited": {
					"type": "boolean",
					"description": "If this flag is set to true, any change in the report header fields will be copied down to expenses, itemizations and allocations, as per the configuration.  <b>Usage of this flag should be deliberate as data corruption could result.</b>"
				},
				"isPaperReceiptsReceived": {
					"type": "boolean",
					"description": "Whether paper receipts have been received for the report"
				},
				"name": {
					"type": "string",
					"description": "The expense report name input by the user"
				},
				"policy": {
					"type": "string",
					"description": "The policy name to which the report adheres (localized as per `accept-language` header)"
				},
				"policyId": {
					"type": "string",
					"description": "The unique identifier of the policy that applies to this report"
				},
				"redirectFund": {
					"description": "Funds redirected to IBCP card",
					"$ref": "#/definitions/RedirectFund"
				},
				"reportDate": {
					"type": "string",
					"format": "date",
					"description": "The date (ISO-8601) assigned to the report by the user (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"reportSource": {
					"type": "string",
					"description": "Identifies the consumer who is modifying the report. Possible values: OTHER - Unknown",
					"enum": ["OTHER"]
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The start date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				}
			}
		},
		"ExpenseSourceIdentifiers": {
			"type": "object",
			"properties": {
				"creditCardTransactionId": {
					"type": "string",
					"description": "The unique identifier of the credit card transaction (indexed transactionId) associated with the expense"
				},
				"ereceiptId": {
					"type": "string"
				},
				"expenseCaptureImageId": {
					"type": "string",
					"description": "The unique identifier of the expense capture image associated with the expense"
				},
				"personalCardTransactionId": {
					"type": "string",
					"description": "The unique identifier of the personal card transaction associated with the expense"
				},
				"quickExpenseId": {
					"type": "string",
					"description": "The unique identifier of the mobile expense associated with the expense"
				},
				"segmentId": {
					"type": "integer",
					"format": "int64",
					"description": "The unique identifier of the segment associated with the expense"
				},
				"segmentTypeId": {
					"type": "string",
					"description": "Segment type id associated with the trip. Possible values: AIRFR - Air Ticket, AIRSU - Air Subscription, CARRT - Car Rental, DININ - Dining, EVENT - Event, HOTEL - Hotel Reservation, INSUR - Insurance, LIMOF - Limousine Reservation, MISC - Miscellaneous, PARKG - Parking Fee, RAILF - Train Ticket, RAISU - Train Subscription, TAXIF - Taxi Fare, VISA - Visa"
				},
				"tripId": {
					"type": "integer",
					"format": "int64",
					"description": "The unique identifier of the trip id associated with the expense"
				}
			}
		},
		"SubWorkflowStepInstance": {
			"type": "object",
			"required": ["roleCode", "sequenceOrder", "stepId", "stepInstanceId"],
			"properties": {
				"actionDate": {
					"type": "string",
					"format": "date-time",
					"description": "The UTC datetime when this step was acted upon (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ"
				},
				"approverId": {
					"type": "string",
					"description": "Approver Concur User Id"
				},
				"changedApproverId": {
					"type": "string",
					"description": "Concur User Id of the changed approver if the step has any change approver rule and it evaluates to true"
				},
				"delegateId": {
					"type": "string",
					"description": "Delegate Concur User Id"
				},
				"finalStatusId": {
					"type": "string",
					"description": "Final status for this step"
				},
				"hasStepBeenSkipped": {
					"type": "boolean",
					"description": "Boolean indicating if the step is skipped, true if any skip rule defined for this step evaluates to true"
				},
				"isCompleted": {
					"type": "boolean",
					"description": "Boolean indicating if the step has been completed"
				},
				"isDeletable": {
					"type": "boolean",
					"description": "Boolean indicating if the step can be deleted by the user (relevant only if the step is visible)"
				},
				"isEditable": {
					"type": "boolean",
					"description": "Boolean indicating if the step can be edited by the user (relevant only if the step is visible)"
				},
				"isRequired": {
					"type": "boolean",
					"description": "Boolean indicating if the step is required (relevant only if the step is visible)"
				},
				"isStepSkippable": {
					"type": "boolean",
					"description": "Boolean indicating if step can be skipped, true if skip rules are defined for the step"
				},
				"isUserAddedStepAllowed": {
					"type": "boolean",
					"description": "Boolean indicating if a step can be added (relevant only if the step is visible)"
				},
				"isVisible": {
					"type": "boolean",
					"description": "Boolean indicating if the step can be visible to the user"
				},
				"roleCode": {
					"type": "string",
					"description": "Role Code"
				},
				"sequenceOrder": {
					"type": "integer",
					"format": "int32",
					"description": "Sequence of this step in the workflow"
				},
				"stepId": {
					"type": "string",
					"description": "Identifier of the step that this is an instance of"
				},
				"stepInstanceId": {
					"type": "string",
					"description": "Step instance identifier"
				}
			}
		},
		"NewTravelDiaryResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the traveldiary"
				}
			}
		},
		"CustomData": {
			"type": "object",
			"required": ["id"],
			"properties": {
				"id": {
					"type": "string",
					"description": "The unique identifier of the Custom field for which a value is set, for example 'custom1', 'orgUnit1'"
				},
				"isValid": {
					"type": "boolean",
					"description": "Whether the value returned is valid or not. If false, the value represents a list item value that can no longer be used. Default value: true"
				},
				"value": {
					"type": "string",
					"description": "The value of the custom field. This field can have values for all the supported data types such as 'text', 'integer', 'boolean' and 'listItemId'. Maximum length: 48 characters  - (Link out to detailed description of CustomData: meaning of values as they pertain to different datatypes (UUID for list, numeric for Amount, etc))"
				}
			}
		},
		"PostReportExpenseResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the report expense"
				}
			}
		},
		"CommentDetails": {
			"type": "object",
			"required": ["author", "comment", "createdForEmployeeId", "creationDate"],
			"properties": {
				"author": {
					"description": "The comment author's name",
					"$ref": "#/definitions/Employee"
				},
				"comment": {
					"type": "string",
					"description": "The comments input on the report/expense by all users"
				},
				"createdForEmployeeId": {
					"type": "string",
					"description": "The unique identifier of the Employee the comment was created on behalf of. This would differ from the comment author only in the case of delegates creating the comment"
				},
				"creationDate": {
					"type": "string",
					"format": "date-time",
					"description": "The UTC datetime when the comment was created on the report/expense (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ"
				}
			}
		},
		"ReportException": {
			"type": "object",
			"required": ["exceptionCode", "isBlocking"],
			"properties": {
				"allocationId": {
					"type": "string",
					"description": "The unique identifier of the allocation to which the exception relates"
				},
				"exceptionCode": {
					"type": "string",
					"description": "The unique identifier of the exception type"
				},
				"expenseId": {
					"type": "string",
					"description": "The unique identifier of the expense to which the exception relates"
				},
				"isBlocking": {
					"type": "boolean",
					"description": "Whether the exception will prevent the report from being submitted"
				},
				"message": {
					"type": "string",
					"description": "Description of the exception, in the user's language"
				},
				"parameters": {
					"type": "object",
					"description": "Data enabling specific identification of the issue underlying the exception"
				},
				"parentExpenseId": {
					"type": "string",
					"description": "The unique identifier of the parent expense when the exception relates to an itemized expense"
				}
			}
		},
		"TargetFieldSetting": {
			"type": "object",
			"properties": {
				"action": {
					"type": "string",
					"enum": ["SHOW", "HIDE"]
				},
				"formFieldId": {
					"type": "string"
				},
				"operator": {
					"type": "string",
					"enum": ["after", "before", "lessThan", "greaterThan", "contains", "notContain", "endsWith", "beginsWith", "equals"]
				},
				"searchBy": {
					"type": "string",
					"enum": ["value", "code"]
				},
				"value": {
					"type": "string"
				}
			}
		},
		"NewReportExpense": {
			"type": "object",
			"required": ["exchangeRate", "expenseSource", "expenseType", "transactionAmount"],
			"properties": {
				"authorizationRequestExpenseId": {
					"type": "string",
					"description": "The authorization request expense id associated with the expense"
				},
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user. Maximum length: 64 characters"
				},
				"comment": {
					"type": "string",
					"description": "A comment that describes the expense. Maximum length: 2000 characters"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"exchangeRate": {
					"description": "The exchange rate data for the expense. Please refer to the 'ExchangeRate' object for more information",
					"$ref": "#/definitions/ExchangeRate"
				},
				"expenseSource": {
					"type": "string",
					"description": "The source of the expense. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TA - Travel Allowance, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TA", "TR", "UI"]
				},
				"expenseType": {
					"description": "The expense type data for the expense. Please refer to the 'ExpenseType' object for more information",
					"$ref": "#/definitions/ExpenseType"
				},
				"isExcludedFromCashAdvanceByUser": {
					"type": "boolean",
					"description": "Whether the user has excluded the expense from cash advance. Default value: false"
				},
				"isExpenseBillable": {
					"type": "boolean",
					"description": "Whether the expense is billable. Default value: false"
				},
				"isPersonalExpense": {
					"type": "boolean",
					"description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user. Default value: false"
				},
				"location": {
					"description": "The location data of the expense. Please refer to the 'Location' object for more information",
					"$ref": "#/definitions/Location"
				},
				"merchantTaxId": {
					"type": "string",
					"description": "The merchant tax id for the expense. Maximum length: 64 characters"
				},
				"mileage": {
					"description": "The mileage data associated with the expense. Please refer to the 'Mileage' object for more information",
					"$ref": "#/definitions/Mileage"
				},
				"parentExpenseId": {
					"type": "string",
					"description": "The expense Id of the parent expense"
				},
				"paymentType": {
					"description": "The payment type data for the expense. Default's to group's default payment type else CASH. Please refer to the 'PaymentType' object for more information",
					"$ref": "#/definitions/PaymentType"
				},
				"receiptImageId": {
					"type": "string",
					"description": "The unique identifier of the image associated with the expense"
				},
				"receiptType": {
					"description": "Receipt type for the expense. Please refer to the 'ReceiptType' object for more information",
					"$ref": "#/definitions/ReceiptType"
				},
				"smartExpense": {
					"description": "The smart expense data associated with this expense. Please refer to the 'SmartExpense' object for more information",
					"$ref": "#/definitions/SmartExpense"
				},
				"tax": {
					"description": "The tax data associated with the expense",
					"$ref": "#/definitions/Tax"
				},
				"taxRateLocation": {
					"type": "string",
					"description": "Transaction location relative to the employee's home location as defined by their user profile. Possible values: FOREIGN - The expense transaction took place in foreign currency, HOME - The expense transaction took place in the reimbursement currency, OUT_OF_PROVINCE - The expense transaction took place outside the state jurisdiction. Default value: HOME",
					"enum": ["FOREIGN", "HOME", "OUT_OF_PROVINCE"]
				},
				"transactionAmount": {
					"description": "The amount of the expense, in the transaction currency paid to the vendor",
					"$ref": "#/definitions/Amount"
				},
				"transactionDate": {
					"type": "string",
					"format": "date",
					"description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"travel": {
					"description": "The travel data associated with the expense. Please refer to the 'Travel' object for more information",
					"$ref": "#/definitions/Travel"
				},
				"travelAllowance": {
					"description": "The travel allowance data associated with the expense. Please refer to the 'TarvelAllowance' object for more information",
					"$ref": "#/definitions/TravelAllowance"
				},
				"vendor": {
					"description": "The vendor data for the expense. Please refer to the 'Vendor' object for more information",
					"$ref": "#/definitions/Vendor"
				}
			}
		},
		"CombineExpensesResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the remaining expense after the combine operation"
				}
			}
		},
		"ReportExpenseItemizationSummary": {
			"type": "object",
			"required": ["allocationState", "exchangeRate", "expenseId", "expenseType", "hasBlockingExceptions", "hasExceptions", "hasMissingReceiptDeclaration", "isAutoCreated", "isImageRequired", "isPaperReceiptRequired", "isPersonalExpense", "paymentType", "postedAmount", "transactionAmount"],
			"properties": {
				"allocationSetId": {
					"type": "string",
					"description": "The identifier of the Allocation set associated with the expense. Allocations which belong to the same set were created at the same time."
				},
				"allocationState": {
					"type": "string",
					"description": "Allocation state for the expense. Possible values: 'FULLY_ALLOCATED', 'NOT_ALLOCATED', 'PARTIALLY_ALLOCATED'"
				},
				"approvedAmount": {
					"description": "The approved amount of the expense, in the report currency",
					"$ref": "#/definitions/Amount"
				},
				"approverAdjustedAmount": {
					"description": "The total amount adjusted for the expense by the approver",
					"$ref": "#/definitions/Amount"
				},
				"attendeeCount": {
					"type": "integer",
					"format": "int32",
					"description": "The total number of attendees associated with the expense"
				},
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user"
				},
				"claimedAmount": {
					"description": "The total non-personal amount claimed for reimbursement for the expense",
					"$ref": "#/definitions/Amount"
				},
				"ereceiptImageId": {
					"type": "string",
					"description": "The unique identifier of the eReceipt image associated with the expense"
				},
				"exchangeRate": {
					"description": "Exchange rate data for the expense. Please refer to the 'ExchangeRate' object for more information",
					"$ref": "#/definitions/ExchangeRate"
				},
				"expenseId": {
					"type": "string",
					"description": "The unique identifier for the expense"
				},
				"expenseSourceIdentifiers": {
					"description": "The list of expense sources associated with the expense",
					"$ref": "#/definitions/ExpenseSourceIdentifiers"
				},
				"expenseType": {
					"description": "The expense type information for the expense. Please refer to the 'ExpenseType' object for more information",
					"$ref": "#/definitions/ExpenseType"
				},
				"hasBlockingExceptions": {
					"type": "boolean",
					"description": "Whether the expense has any exceptions that blocks it from being submitted"
				},
				"hasExceptions": {
					"type": "boolean",
					"description": "Whether the expense has any exceptions"
				},
				"hasMissingReceiptDeclaration": {
					"type": "boolean",
					"description": "Whether the expense has an affidavit declaration for missing receipt"
				},
				"imageCertificationStatus": {
					"type": "string",
					"description": "The final status of the receipt image associated with the expense. Possible values: Refer [Receipts Status V4 API](https://github.concur.com/receipts/receipt-service/wiki/GRDC-API-Docs#possible-digitizationstatus-codes)"
				},
				"isAutoCreated": {
					"type": "boolean",
					"description": "Whether the expense is auto created"
				},
				"isImageRequired": {
					"type": "boolean",
					"description": "Whether the image is required for the expense"
				},
				"isPaperReceiptRequired": {
					"type": "boolean",
					"description": "Whether the paper receipt is required for the expense to be submitted"
				},
				"isPersonalExpense": {
					"type": "boolean",
					"description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user"
				},
				"links": {
					"type": "array",
					"description": "Resource links related to this call",
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"location": {
					"description": "The location information of the expense. Please refer to the 'Location' object for more information",
					"$ref": "#/definitions/Location"
				},
				"paymentType": {
					"description": "The payment type information for the expense. Please refer to the 'PaymentType' object for more information",
					"$ref": "#/definitions/PaymentType"
				},
				"postedAmount": {
					"description": "The amount of the expense, in the report currency",
					"$ref": "#/definitions/Amount"
				},
				"receiptImageId": {
					"type": "string",
					"description": "The unique identifier of the image associated with the expense"
				},
				"ticketNumber": {
					"type": "string",
					"description": "The ticket number associated with the travel"
				},
				"transactionAmount": {
					"description": "The amount of the expense, in the transaction currency paid to the vendor",
					"$ref": "#/definitions/Amount"
				},
				"transactionDate": {
					"type": "string",
					"format": "date",
					"description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"travelAllowance": {
					"description": "The travel allowance data associated with the expense. Please refer to the 'TravelAllowance' object for more information",
					"$ref": "#/definitions/TravelAllowance"
				},
				"vendor": {
					"description": "The vendor information for the expense. Please refer to the 'Vendor' object for more information",
					"$ref": "#/definitions/Vendor"
				}
			}
		},
		"EReceipt": {
			"type": "object",
			"required": ["id", "type"],
			"properties": {
				"carEReceipt": {
					"description": "The eReceipt car data. Please refer to the 'CarEReceipt' object for more information",
					"$ref": "#/definitions/CarEReceipt"
				},
				"hotelEReceipt": {
					"description": "The eReceipt hotel data. Please refer to the 'HotelEReceipt' object for more information",
					"$ref": "#/definitions/HotelEReceipt"
				},
				"id": {
					"type": "string",
					"description": "The unique identifier of the eReceipt with the expense"
				},
				"imageId": {
					"type": "string",
					"description": "The unique identifier of the eReceipt image associated with the expense"
				},
				"templateURL": {
					"type": "string",
					"description": "The URL of the eReceipt template. Maximum length: 512 characters"
				},
				"type": {
					"type": "string",
					"description": "The type of eReceipt associated with the expense. Possible values: 'AIR', 'CAR', 'GASXX', 'GENERAL', 'GRTRN', 'HOTEL', 'JPT', 'MEALS', 'OFFIC', 'PRKNG', 'RAIL', 'RIDE', 'SHIPG', 'TELEC'"
				}
			}
		},
		"Trip": {
			"type": "object",
			"required": ["segmentId", "segmentTypeId", "tripId"],
			"properties": {
				"airTrip": {
					"description": "Air trip data associated with the expense. Please refer to the 'AirTrip' object for more information",
					"$ref": "#/definitions/AirTrip"
				},
				"bookingOrigin": {
					"type": "string",
					"description": "Booking origin of the trip. Possible values: AETM - Amadeus E-Travel, CLIQ - Concur Travel, PANM - Open Booking, TRPT - TripIt, TSUP - Travel Supplier"
				},
				"bookingSource": {
					"type": "string",
					"description": "Booking source of the trip. Maximum length: 48 characters. Examples: 'Expedia', 'Travelocity', 'Manual'"
				},
				"carTrip": {
					"description": "Car trip data associated with the expense. Please refer to the 'CarTrip' object for more information",
					"$ref": "#/definitions/CarTrip"
				},
				"cliqbookPaymentId": {
					"type": "integer",
					"format": "int32",
					"description": "Cliqbook payment id associated with the trip"
				},
				"cliqbookPaymentMethod": {
					"type": "string",
					"description": "Cliqbook payment method associated with the trip. Possible values: 'GHOST_CARD' or 'FLGHT_PASS'"
				},
				"hotelTrip": {
					"description": "Hotel trip data associated with the expense. Please refer to the 'HotelTrip' object for more information",
					"$ref": "#/definitions/HotelTrip"
				},
				"merchantCode": {
					"type": "string",
					"description": "Merchant code associated with the trip. Maximum length: 4 characters"
				},
				"rideTrip": {
					"description": "Ride or Taxi trip data associated with the expense. Please refer to the 'RideTrip' object for more information",
					"$ref": "#/definitions/RideTrip"
				},
				"segmentId": {
					"type": "integer",
					"format": "int64",
					"description": "The unique identifier of the segment associated with the expense"
				},
				"segmentTypeId": {
					"type": "string",
					"description": "Segment type id associated with the trip. Possible values: AIRFR - Air Ticket, AIRSU - Air Subscription, CARRT - Car Rental, DININ - Dining, EVENT - Event, HOTEL - Hotel Reservation, INSUR - Insurance, LIMOF - Limousine Reservation, MISC - Miscellaneous, PARKG - Parking Fee, RAILF - Train Ticket, RAISU - Train Subscription, TAXIF - Taxi Fare, VISA - Visa"
				},
				"startLocationId": {
					"type": "string",
					"description": "The unique identifier of the start location associated with the trip"
				},
				"tripId": {
					"type": "integer",
					"format": "int64",
					"description": "The unique identifier of the trip id associated with the expense"
				}
			}
		},
		"ReportExpenseDetail": {
			"type": "object",
			"required": ["allocationState", "exchangeRate", "expenseId", "expenseType", "hasBlockingExceptions", "hasExceptions", "hasMissingReceiptDeclaration", "isAutoCreated", "isExcludedFromCashAdvanceByUser", "isExpenseBillable", "isExpenseRejected", "isImageRequired", "isPaperReceiptReceived", "isPaperReceiptRequired", "isPersonalExpense", "paymentType", "postedAmount", "taxRateLocation", "transactionAmount"],
			"properties": {
				"allocationSetId": {
					"type": "string",
					"description": "The identifier of the Allocation set associated with the expense. Allocations which belong to the same set were created at the same time."
				},
				"allocationState": {
					"type": "string",
					"description": "Allocation state for the expense.",
					"type": "string",
					"enum": ["FULLY_ALLOCATED", "NOT_ALLOCATED", "PARTIALLY_ALLOCATED"]
				},
				"approvedAmount": {
					"description": "The approved amount of the expense, in the report currency",
					"$ref": "#/definitions/Amount"
				},
				"approverAdjustedAmount": {
					"description": "The total amount adjusted for the expense by the approver",
					"$ref": "#/definitions/Amount"
				},
				"attendeeCount": {
					"type": "integer",
					"format": "int32",
					"description": "The total number of attendees associated with the expense"
				},
				"authorizationRequestExpenseId": {
					"type": "string",
					"description": "The authorization request expense id associated with the expense"
				},
				"budgetAccrualDate": {
					"type": "string",
					"format": "date",
					"description": "The budget accrual date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user"
				},
				"claimedAmount": {
					"description": "The total non-personal amount claimed for reimbursement for the expense",
					"$ref": "#/definitions/Amount"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the expense based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"ereceiptImageId": {
					"type": "string",
					"description": "The unique identifier of the eReceipt image associated with the expense"
				},
				"exchangeRate": {
					"description": "Exchange rate data for the expense. Please refer to the 'ExchangeRate' object for more information",
					"$ref": "#/definitions/ExchangeRate"
				},
				"expenseId": {
					"type": "string",
					"description": "The unique identifier for the expense"
				},
				"expenseSourceIdentifiers": {
					"description": "The list of expense sources associated with the expense",
					"$ref": "#/definitions/ExpenseSourceIdentifiers"
				},
				"expenseTaxSummary": {
					"description": "Tax information for the expense. Please refer to the 'ExpenseTaxSummary' object for more information",
					"$ref": "#/definitions/ExpenseTaxSummary"
				},
				"expenseType": {
					"description": "The expense type information for the expense. Please refer to the 'ExpenseType' object for more information",
					"$ref": "#/definitions/ExpenseType"
				},
				"hasBlockingExceptions": {
					"type": "boolean",
					"description": "Whether the expense has any exceptions that blocks it from being submitted"
				},
				"hasExceptions": {
					"type": "boolean",
					"description": "Whether the expense has any exceptions"
				},
				"hasMissingReceiptDeclaration": {
					"type": "boolean",
					"description": "Whether the expense has an affidavit declaration for missing receipt"
				},
				"imageCertificationStatus": {
					"type": "string",
					"description": "The final status of the receipt image associated with the expense. Possible values: Refer [Receipts Status V4 API](https://github.concur.com/receipts/receipt-service/wiki/GRDC-API-Docs#possible-digitizationstatus-codes)"
				},
				"isAutoCreated": {
					"type": "boolean",
					"description": "Whether the expense is auto created"
				},
				"isExcludedFromCashAdvanceByUser": {
					"type": "boolean",
					"description": "Whether the user has excluded the expense from cash advance"
				},
				"isExpenseBillable": {
					"type": "boolean",
					"description": "Whether the expense is billable"
				},
				"isExpenseRejected": {
					"type": "boolean",
					"description": "Whether the approver or processor has rejected this expense in the report. If this is true then this expense will be sent back to the report submitted in an addendum (split) report"
				},
				"isImageRequired": {
					"type": "boolean",
					"description": "Whether the image is required for the expense"
				},
				"isPaperReceiptReceived": {
					"type": "boolean",
					"description": "Whether the paper receipt was received for the expense"
				},
				"isPaperReceiptRequired": {
					"type": "boolean",
					"description": "Whether the paper receipt is required for the expense to be submitted"
				},
				"isPersonalExpense": {
					"type": "boolean",
					"description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user"
				},
				"links": {
					"type": "array",
					"description": "Resource links related to this call",
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"location": {
					"description": "The location information of the expense. Please refer to the 'Location' object for more information",
					"$ref": "#/definitions/Location"
				},
				"merchantTaxId": {
					"type": "string",
					"description": "Merchant tax id for the expense"
				},
				"mileage": {
					"description": "The mileage data associated with the expense. Please refer to the 'Mileage' object for more information",
					"$ref": "#/definitions/Mileage"
				},
				"parentExpenseId": {
					"type": "string",
					"description": "Expense Id of the parent expense"
				},
				"paymentType": {
					"description": "The payment type information for the expense. Please refer to the 'PaymentType' object for more information",
					"$ref": "#/definitions/PaymentType"
				},
				"postedAmount": {
					"description": "The amount of the expense, in the report currency",
					"$ref": "#/definitions/Amount"
				},
				"receiptImageId": {
					"type": "string",
					"description": "The unique identifier of the image associated with the expense"
				},
				"receiptType": {
					"description": "Receipt type for the expense. Please refer to the 'ReceiptType' object for more information",
					"$ref": "#/definitions/ReceiptType"
				},
				"taxRateLocation": {
					"type": "string",
					"description": "Transaction location relative to the employee's home location as defined by their user profile. Possible values: FOREIGN - The expense transaction took place in foreign currency, HOME - The expense transaction took place in the reimbursement currency, OUT_OF_PROVINCE - The expense transaction took place outside the state jurisdiction. Default value: HOME",
					"enum": ["FOREIGN", "HOME", "OUT_OF_PROVINCE"]
				},
				"transactionAmount": {
					"description": "The amount of the expense, in the transaction currency paid to the vendor",
					"$ref": "#/definitions/Amount"
				},
				"transactionDate": {
					"type": "string",
					"format": "date",
					"description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"travel": {
					"description": "The travel data associated with the expense. Please refer to the 'Travel' object for more information",
					"$ref": "#/definitions/Travel"
				},
				"travelAllowance": {
					"description": "The travel allowance data associated with the expense. Please refer to the 'TravelAllowance' object for more information",
					"$ref": "#/definitions/TravelAllowance"
				},
				"vendor": {
					"description": "The vendor information for the expense. Please refer to the 'Vendor' object for more information",
					"$ref": "#/definitions/Vendor"
				}
			}
		},
		"Associated Reports": {
			"type": "object",
			"required": ["reportId"],
			"properties": {
				"links": {
					"type": "array",
					"description": "Resource links related to this call",
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"reportId": {
					"type": "string",
					"description": "The unique identifier for the report resource"
				}
			}
		},
		"Amount": {
			"type": "object",
			"required": ["currencyCode", "value"],
			"properties": {
				"currencyCode": {
					"type": "string",
					"description": "The 3-letter ISO 4217 currency code for the expense report currency, based on the user's assigned reimbursement currency when the report was created. Examples: USD - US dollars; BRL - Brazilian real; CAD - Canadian dollar; CHF - Swiss franc; EUR - Euro; GBO - Pound sterling; HKD - Hong Kong dollar; INR - Indian rupee; MXN - Mexican peso; NOK - Norwegian krone; SEK - Swedish krona"
				},
				"value": {
					"type": "number",
					"format": "double",
					"description": "The amount in the defined currency"
				}
			}
		},
		"NewReportDetails": {
			"type": "object",
			"required": ["country", "policy", "policyId"],
			"properties": {
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user"
				},
				"comment": {
					"type": "string",
					"description": "The expense report comment added by the user"
				},
				"country": {
					"type": "string",
					"description": "The country name, in the user's language"
				},
				"countryCode": {
					"type": "string",
					"description": "The location country ISO 3166-1 code (https://en.wikipedia.org/wiki/ISO_3166-1)"
				},
				"countrySubDivisionCode": {
					"type": "string",
					"description": "The location country sub division ISO 3166-2 code (https://en.wikipedia.org/wiki/ISO_3166-2)"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The end date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"name": {
					"type": "string",
					"description": "The expense report name input by the user"
				},
				"policy": {
					"type": "string",
					"description": "The policy name to which the report adheres to"
				},
				"policyId": {
					"type": "string",
					"description": "The unique identifier of the policy that applies to this report"
				},
				"reportDate": {
					"type": "string",
					"format": "date",
					"description": "The date (ISO-8601) assigned to the report by the user (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"reportSource": {
					"type": "string",
					"description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TR", "UI"]
				},
				"reportType": {
					"type": "string",
					"description": "This value identifies the method used to create the report. Statement refers to company billed statement reports and Auto-created refers to reports created by Expense Assistant.",
					"enum": ["Regular", "Reconciliation", "Statement", "AutoCreated"]
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The start date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				}
			}
		},
		"AllocationFavorite": {
			"type": "object",
			"required": ["allocations", "formId", "name"],
			"properties": {
				"allocations": {
					"type": "array",
					"description": "List of allocations which comprises the Allocation Favorite",
					"items": {
						"$ref": "#/definitions/AllocationFavoriteEntry"
					}
				},
				"formId": {
					"type": "string",
					"description": "Allocation `formId` of the Allocation Favorite"
				},
				"name": {
					"type": "string",
					"description": "User-defined name of the Allocation Favorite"
				}
			},
			"description": "The core Allocation Favorite object, which can be used during POST and PATCH"
		},
		"ReportAllocationsPostResponse": {
			"type": "object",
			"required": ["allocationUris", "expenseId"],
			"properties": {
				"allocationUris": {
					"type": "array",
					"description": "This is an array of unique resource identifiers of allocations for an expense for this report",
					"items": {
						"type": "string"
					}
				},
				"expenseId": {
					"type": "string",
					"description": "The unique identifier of the expense"
				}
			}
		},
		"ResponseEntity": {
			"type": "object",
			"properties": {
				"body": {
					"type": "object"
				},
				"statusCode": {
					"type": "string",
					"enum": ["100 CONTINUE", "101 SWITCHING_PROTOCOLS", "102 PROCESSING", "103 CHECKPOINT", "200 OK", "201 CREATED", "202 ACCEPTED", "203 NON_AUTHORITATIVE_INFORMATION", "204 NO_CONTENT", "205 RESET_CONTENT", "206 PARTIAL_CONTENT", "207 MULTI_STATUS", "208 ALREADY_REPORTED", "226 IM_USED", "300 MULTIPLE_CHOICES", "301 MOVED_PERMANENTLY", "302 FOUND", "302 MOVED_TEMPORARILY", "303 SEE_OTHER", "304 NOT_MODIFIED", "305 USE_PROXY", "307 TEMPORARY_REDIRECT", "308 PERMANENT_REDIRECT", "400 BAD_REQUEST", "401 UNAUTHORIZED", "402 PAYMENT_REQUIRED", "403 FORBIDDEN", "404 NOT_FOUND", "405 METHOD_NOT_ALLOWED", "406 NOT_ACCEPTABLE", "407 PROXY_AUTHENTICATION_REQUIRED", "408 REQUEST_TIMEOUT", "409 CONFLICT", "410 GONE", "411 LENGTH_REQUIRED", "412 PRECONDITION_FAILED", "413 PAYLOAD_TOO_LARGE", "413 REQUEST_ENTITY_TOO_LARGE", "414 URI_TOO_LONG", "414 REQUEST_URI_TOO_LONG", "415 UNSUPPORTED_MEDIA_TYPE", "416 REQUESTED_RANGE_NOT_SATISFIABLE", "417 EXPECTATION_FAILED", "418 I_AM_A_TEAPOT", "419 INSUFFICIENT_SPACE_ON_RESOURCE", "420 METHOD_FAILURE", "421 DESTINATION_LOCKED", "422 UNPROCESSABLE_ENTITY", "423 LOCKED", "424 FAILED_DEPENDENCY", "426 UPGRADE_REQUIRED", "428 PRECONDITION_REQUIRED", "429 TOO_MANY_REQUESTS", "431 REQUEST_HEADER_FIELDS_TOO_LARGE", "451 UNAVAILABLE_FOR_LEGAL_REASONS", "500 INTERNAL_SERVER_ERROR", "501 NOT_IMPLEMENTED", "502 BAD_GATEWAY", "503 SERVICE_UNAVAILABLE", "504 GATEWAY_TIMEOUT", "505 HTTP_VERSION_NOT_SUPPORTED", "506 VARIANT_ALSO_NEGOTIATES", "507 INSUFFICIENT_STORAGE", "508 LOOP_DETECTED", "509 BANDWIDTH_LIMIT_EXCEEDED", "510 NOT_EXTENDED", "511 NETWORK_AUTHENTICATION_REQUIRED"]
				},
				"statusCodeValue": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"CarEReceipt": {
			"type": "object",
			"properties": {
				"calculatedDailyRate": {
					"type": "number",
					"format": "double",
					"description": "The calculated car rental daily rate"
				},
				"carClass": {
					"type": "string",
					"description": "The car class. Maximum length: 4 characters. Examples: 'IDAD', 'ECMZ', 'PCAV', 'IGDV'"
				},
				"currencyCode": {
					"type": "string",
					"description": "The 3-letter ISO 4217 currency code. Examples: USD - US dollars, BRL - Brazilian real, CAD - Canadian dollar"
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The car rental end date(ISO-8601)(https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"fuelServiceCharge": {
					"type": "number",
					"format": "double",
					"description": "The fuel service charge. Minimum value: 0"
				},
				"numberOfRentalDays": {
					"type": "integer",
					"format": "int32",
					"description": "The number of car rental calculated days. Minimum value: 0"
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The car rental start date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"unitsDriven": {
					"type": "integer",
					"format": "int32",
					"description": "The total units driven. Minimum value: 0"
				},
				"vendorName": {
					"type": "string",
					"description": "The name of the car vendor. Maximum length: 255 characters. Example: 'ABC Rent A Car'"
				}
			}
		},
		"AllocationFavoriteWrapper": {
			"type": "object",
			"required": ["allocations", "formId", "id", "modified", "name", "uri"],
			"properties": {
				"allocations": {
					"type": "array",
					"description": "List of allocations which comprises the Allocation Favorite",
					"items": {
						"$ref": "#/definitions/AllocationFavoriteEntry"
					}
				},
				"formId": {
					"type": "string",
					"description": "Allocation `formId` of the Allocation Favorite"
				},
				"id": {
					"type": "string",
					"description": "Unique Identifier of the Allocation Favorite"
				},
				"modified": {
					"type": "string",
					"format": "date-time",
					"description": "Last modified date and time of the Allocation Favorite"
				},
				"name": {
					"type": "string",
					"description": "User-defined name of the Allocation Favorite"
				},
				"uri": {
					"type": "string",
					"description": "URI of the Allocation Favorite"
				}
			}
		},
		"WorkflowTransition": {
			"type": "object",
			"required": ["statusId"],
			"properties": {
				"actionText": {
					"type": "string",
					"description": "Action text for this workflow transition"
				},
				"description": {
					"type": "string",
					"description": "Description for the workflow transition"
				},
				"name": {
					"type": "string",
					"description": "The name of the workflow transition"
				},
				"statusId": {
					"type": "string",
					"description": "Status that will be assigned to the report by this workflow transition"
				}
			}
		},
		"ErrorMessage": {
			"type": "object",
			"required": ["errorMessage", "httpStatus", "path", "timestamp"],
			"properties": {
				"errorId": {
					"type": "string",
					"description": "The unique identifier of the error associated with the response or is it error response itself"
				},
				"errorMessage": {
					"type": "string",
					"description": "The detailed error message"
				},
				"httpStatus": {
					"type": "string",
					"description": "The http response code and phrase for the response"
				},
				"path": {
					"type": "string",
					"description": "The URI of the attempted request"
				},
				"timestamp": {
					"type": "string",
					"format": "date-time",
					"example": "2016-10-04T00:53:25.931+0000",
					"description": "The time when the error was captured"
				},
				"validationErrors": {
					"type": "array",
					"description": "The validation error messages",
					"items": {
						"$ref": "#/definitions/ValidationError"
					}
				}
			}
		},
		"ReportDeltas": {
			"type": "object",
			"properties": {
				"changedFieldValues": {
					"type": "array",
					"description": "This is an array of report object fields whose values has been modified after the report was reopened",
					"items": {
						"$ref": "#/definitions/ChangedFieldValue"
					}
				},
				"expenses": {
					"type": "array",
					"description": "This is an array of expense objects whose values has been modified after the report was reopened",
					"items": {
						"$ref": "#/definitions/ReportExpenseDeltas"
					}
				}
			}
		},
		"HotelTrip": {
			"type": "object",
			"properties": {
				"calculatedDailyRate": {
					"type": "number",
					"format": "double",
					"description": "The calculated hotel daily rate"
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The hotel checkout date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"numberOfNights": {
					"type": "integer",
					"format": "int32",
					"description": "The number of nights. Minimum value: 1"
				},
				"numberOfRooms": {
					"type": "integer",
					"format": "int32",
					"description": "The number of hotel rooms. Minimum value: 1"
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The hotel checkin date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"totalAmountPaid": {
					"description": "The total amount paid",
					"$ref": "#/definitions/Amount"
				},
				"vendorName": {
					"type": "string",
					"description": "The name of the hotel vendor. Maximum length: 255 characters. Examples: 'Hilton', 'Four Points by Sheraton, Seattle'"
				}
			}
		},
		"AirTrip": {
			"type": "object",
			"properties": {
				"airlineName": {
					"type": "string",
					"description": "The name of the airline vendor. Maximum length: 255 characters. Example: 'Alaska Airlines'"
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The last travel date or the travel end date(ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"numberOfTravelDays": {
					"type": "integer",
					"format": "int32",
					"description": "The number of days of travel. Minimum value: 1"
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The first travel date or the travel start date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"ticketType": {
					"type": "string",
					"description": "The airline class of service. Maximum length: 10 characters, Example: 'Economy'"
				},
				"totalAmountPaid": {
					"description": "The total amount paid",
					"$ref": "#/definitions/Amount"
				}
			}
		},
		"PubSubEvent": {
			"type": "object",
			"properties": {
				"correlationId": {
					"type": "string"
				},
				"eventType": {
					"type": "string"
				},
				"facts": {
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"subtopic": {
					"type": "string"
				},
				"timeStamp": {
					"type": "string"
				},
				"topic": {
					"type": "string"
				}
			}
		},
		"ExpenseTaxData": {
			"type": "object",
			"required": ["taxAuthorityId"],
			"properties": {
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"reclaimCode": {
					"type": "string",
					"description": "The tax reclaim code. Maximum length: 20 characters"
				},
				"reclaimTransactionAmount": {
					"type": "number",
					"format": "double",
					"description": "The tax reclaim transaction amount"
				},
				"taxAuthorityId": {
					"type": "string",
					"description": "The unique identifier of the tax authority"
				},
				"taxAuthorityName": {
					"type": "string",
					"description": "The name of the tax authority"
				},
				"taxCode": {
					"type": "string",
					"description": "The tax code. Maximum length: 20 characters"
				},
				"taxFormId": {
					"type": "string",
					"description": "The unique identifier of the tax form associated with the expense"
				},
				"taxPostedAmount": {
					"type": "number",
					"format": "double",
					"description": "The tax posted amount"
				},
				"taxRateTypeId": {
					"type": "string",
					"description": "The unique identifier of the tax rate type id"
				},
				"taxRateTypeName": {
					"type": "string",
					"description": "The name of the tax rate type"
				},
				"taxReclaimConfigurationId": {
					"type": "string",
					"description": "The unique identifier of the tax reclaim configuration id"
				},
				"taxReclaimPostedAmount": {
					"type": "number",
					"format": "double",
					"description": "The tax reclaim posted amount"
				},
				"taxTransactionAmount": {
					"type": "number",
					"format": "double",
					"description": "The tax transaction amount"
				}
			}
		},
		"Tax": {
			"type": "object",
			"required": ["expenseTax1"],
			"properties": {
				"expenseTax1": {
					"description": "The tax data for the expense. Please refer to the 'ExpenseTax' object for more information",
					"$ref": "#/definitions/ExpenseTax"
				},
				"expenseTax2": {
					"description": "The tax data for the expense. Please refer to the 'ExpenseTax' object for more information",
					"$ref": "#/definitions/ExpenseTax"
				}
			}
		},
		"DefaultAllocation": {
			"type": "object",
			"properties": {
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the allocation based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				}
			}
		},
		"ReportExpenseDeltas": {
			"type": "object",
			"required": ["expenseId"],
			"properties": {
				"allocations": {
					"type": "array",
					"description": "This is an array of allocation objects whose values has been modified after the report was reopened",
					"items": {
						"$ref": "#/definitions/AllocationDeltas"
					}
				},
				"changedFieldValues": {
					"type": "array",
					"description": "This is an array of expense object fields whose values has been modified after the report was reopened",
					"items": {
						"$ref": "#/definitions/ChangedFieldValue"
					}
				},
				"expenseId": {
					"type": "string",
					"description": "The unique identifier for the expense"
				}
			}
		},
		"WorkflowInstance": {
			"type": "object",
			"required": ["processId", "processInstanceId"],
			"properties": {
				"currentSequence": {
					"type": "integer",
					"format": "int32",
					"description": "Sequence of the current step in the workflow instance"
				},
				"exceptionMessage": {
					"type": "string",
					"description": "Exception message, if any, associated with the workflow instance. For example when a workflow instance is reset"
				},
				"isReadOnly": {
					"type": "boolean",
					"description": "Indicates whether workflow instance is read only for the current user"
				},
				"isUserAddedStepAfterProcessorAllowed": {
					"type": "boolean",
					"description": "Indicates if user is allowed to add steps after processor step"
				},
				"processId": {
					"type": "string",
					"description": "Id of the workflow process that this workflow is an instance of"
				},
				"processInstanceId": {
					"type": "string",
					"description": "Workflow instance id"
				},
				"stepInstances": {
					"type": "array",
					"description": "List of steps in the workflow instance",
					"items": {
						"$ref": "#/definitions/WorkflowStepInstance"
					}
				},
				"userAddedProcessorStepId": {
					"type": "string",
					"description": "The user added processor step identifier for the workflow"
				},
				"userAddedStepId": {
					"type": "string",
					"description": "The user added step identifier for the workflow"
				}
			}
		},
		"UpdateReportExpense": {
			"type": "object",
			"required": ["expenseSource"],
			"properties": {
				"approverAdjustedAmount": {
					"description": "The total amount adjusted for the expense by the approver",
					"$ref": "#/definitions/Amount"
				},
				"authorizationRequestExpenseId": {
					"type": "string",
					"description": "The authorization request expense id associated with the expense"
				},
				"budgetAccrualDate": {
					"type": "string",
					"format": "date",
					"description": "The budget accrual date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user. Maximum length: 64 characters"
				},
				"comment": {
					"type": "string",
					"description": "A comment that describes the expense. Maximum length: 2000 characters"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"exchangeRate": {
					"description": "The exchange rate data for the expense. Please refer to the 'ExchangeRate' object for more information",
					"$ref": "#/definitions/ExchangeRate"
				},
				"expenseSource": {
					"type": "string",
					"description": "The source of the expense. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TA - Travel Allowance, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TA", "TR", "UI"]
				},
				"expenseType": {
					"description": "The expense type data for the expense. Please refer to the 'ExpenseType' object for more information",
					"$ref": "#/definitions/ExpenseType"
				},
				"hasMissingReceiptDeclaration": {
					"type": "boolean",
					"description": "Whether the expense has an affidavit declaration for missing receipt"
				},
				"isCopyDownInherited": {
					"type": "boolean",
					"description": "If this flag is set to true, any change in the report expense fields will be copied down to itemization's and allocations, as per the configuration"
				},
				"isExcludedFromCashAdvanceByUser": {
					"type": "boolean",
					"description": "Whether the user has excluded the expense from cash advance"
				},
				"isExpenseBillable": {
					"type": "boolean",
					"description": "Whether the expense is billable"
				},
				"isExpenseRejected": {
					"type": "boolean",
					"description": "Whether the approver or processor has rejected this expense in the report. If this is true then this expense will be sent back to the report submitted in an addendum (split) report"
				},
				"isPaperReceiptReceived": {
					"type": "boolean",
					"description": "Whether paper receipts have been received for the expense. "
				},
				"isPersonalExpense": {
					"type": "boolean",
					"description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user"
				},
				"location": {
					"description": "The location data of the expense. Please refer to the 'Location' object for more information",
					"$ref": "#/definitions/Location"
				},
				"merchantTaxId": {
					"type": "string",
					"description": "The merchant tax id for the expense. Maximum length: 64 characters"
				},
				"mileage": {
					"description": "The mileage data associated with the expense. Please refer to the 'Mileage' object for more information",
					"$ref": "#/definitions/Mileage"
				},
				"paymentType": {
					"description": "The payment type data for the expense. Default's to group's default payment type else CASH. Please refer to the 'PaymentType' object for more information",
					"$ref": "#/definitions/PaymentType"
				},
				"receiptImageId": {
					"type": "string",
					"description": "The unique identifier of the image associated with the expense"
				},
				"receiptType": {
					"description": "Receipt type for the expense. Please refer to the 'ReceiptType' object for more information",
					"$ref": "#/definitions/ReceiptType"
				},
				"smartExpense": {
					"description": "The smart expense data associated with this expense. Please refer to the 'SmartExpense' object for more information",
					"$ref": "#/definitions/SmartExpense"
				},
				"tax": {
					"description": "The tax data associated with the expense",
					"$ref": "#/definitions/Tax"
				},
				"taxRateLocation": {
					"type": "string",
					"description": "Transaction location relative to the employee's home location as defined by their user profile. Possible values: FOREIGN - The expense transaction took place in foreign currency, HOME - The expense transaction took place in the reimbursement currency, OUT_OF_PROVINCE - The expense transaction took place outside the state jurisdiction",
					"enum": ["FOREIGN", "HOME", "OUT_OF_PROVINCE"]
				},
				"transactionAmount": {
					"description": "The amount of the expense, in the transaction currency paid to the vendor",
					"$ref": "#/definitions/Amount"
				},
				"transactionDate": {
					"type": "string",
					"format": "date",
					"description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"travel": {
					"description": "The travel data associated with the expense. Please refer to the 'Travel' object for more information",
					"$ref": "#/definitions/Travel"
				},
				"travelAllowance": {
					"description": "The travel allowance data associated with the expense. Please refer to the 'TarvelAllowance' object for more information",
					"$ref": "#/definitions/TravelAllowance"
				},
				"vendor": {
					"description": "The vendor data for the expense. Please refer to the 'Vendor' object for more information",
					"$ref": "#/definitions/Vendor"
				}
			}
		},
		"PostingFeedbackLineItemInfo": {
			"type": "object",
			"properties": {
				"clearingDate": {
					"type": "string",
					"description": "Clearing date"
				},
				"concurTransactionLineItemId": {
					"type": "string",
					"description": "Concur transaction lind item ID"
				},
				"grossAmount": {
					"type": "string",
					"description": "Gross amount"
				},
				"grossAmountCurrency": {
					"type": "string",
					"description": "Gross amount currency"
				},
				"lineItemId": {
					"type": "string",
					"description": "Line item ID"
				},
				"vendorId": {
					"type": "string",
					"description": "Vendor ID"
				},
				"vendorName": {
					"type": "string",
					"description": "Vendor name"
				}
			},
			"description": "Posting Feedback Line Item Information"
		},
		"ReportSendBackRequest": {
			"type": "object",
			"required": ["comment"],
			"properties": {
				"comment": {
					"type": "string",
					"description": "Comments for sending back the report"
				},
				"reasonCodeId": {
					"type": "string",
					"description": "The unique identifier of the Reason Code  only by Processor "
				},
				"reportSource": {
					"type": "string",
					"description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TR", "UI"]
				}
			}
		},
		"TravelDiaryForAReport": {
			"type": "object",
			"required": ["activityEndDate", "activityLocation", "activityPurpose", "activityStartDate"],
			"properties": {
				"activityEndDate": {
					"type": "string",
					"format": "date-time",
					"description": "The end date (ISO-8601) of the traveldiary as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"activityLocation": {
					"type": "string",
					"description": "Location of the travel diary "
				},
				"activityPurpose": {
					"type": "string",
					"description": "Purpose of the travel "
				},
				"activityStartDate": {
					"type": "string",
					"format": "date-time",
					"description": "The start date (ISO-8601) of the traveldiary as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				}
			}
		},
		"CommentSaveResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the Comment"
				}
			}
		},
		"RedirectFund": {
			"type": "object",
			"required": ["amount", "creditCardId"],
			"properties": {
				"amount": {
					"description": "The value of funds redirected to the IBCP card account",
					"$ref": "#/definitions/Amount"
				},
				"creditCardId": {
					"type": "string",
					"description": "The unique identifier of the IBCP card account to which funds need to be redirected"
				}
			}
		},
		"NewWorkflowInstance": {
			"type": "object",
			"required": ["stepInstances"],
			"properties": {
				"stepInstances": {
					"type": "array",
					"description": "Steps in the workflow instance",
					"items": {
						"$ref": "#/definitions/NewWorkflowStepInstance"
					}
				}
			}
		},
		"ProcessPayrollRequest": {
			"type": "object",
			"required": ["payrollPostingStatus"],
			"properties": {
				"companyId": {
					"type": "string",
					"description": "Company ID. Required when 'payrollPostingStatus' is 'success'"
				},
				"documentNumber": {
					"type": "string",
					"description": "Document number. Required when 'payrollPostingStatus' is 'success'"
				},
				"payrollPostingStatus": {
					"type": "string",
					"description": "Status of the payroll posting",
					"enum": ["success", "error", "applicable", "notapplicable"]
				},
				"payrollSystemMessages": {
					"type": "array",
					"description": "System messages. At least one system message is required when 'payrollPostingStatus' is 'error'",
					"items": {
						"type": "string"
					}
				},
				"postingDate": {
					"type": "string",
					"description": "Posting date. Required when 'payrollPostingStatus' is 'success'"
				}
			},
			"description": "Process Payroll Request"
		},
		"FormField": {
			"type": "object",
			"required": ["controlType", "dataType", "fieldAccess", "fieldId", "fieldName", "fieldSequence", "formFieldId", "hasLineSeparator", "isCopyDownSource", "isRequired", "requiredForAutoSave"],
			"properties": {
				"controlType": {
					"type": "string",
					"description": "The control type for the form field",
					"enum": ["Checkbox", "DateEdit", "Edit", "ListEdit", "MultiPicklist", "Picklist", "TextArea", "Time", "LaunchUrlSingle", "LaunchUrlMulti"]
				},
				"dataType": {
					"type": "string",
					"description": "The data type for the form field",
					"enum": ["Amount", "Boolean", "ConnectedList", "Date", "Integer", "List", "Numeric", "String"]
				},
				"defaultValue": {
					"description": "The source or content of the default value for the form field",
					"$ref": "#/definitions/CustomField"
				},
				"fieldAccess": {
					"type": "string",
					"description": "The supplied user’s access to the form field",
					"enum": ["HD=hidden", "RO=read-only", "RW=read-write"]
				},
				"fieldId": {
					"type": "string",
					"description": "The field id"
				},
				"fieldName": {
					"type": "string",
					"description": "The label of the form field"
				},
				"fieldSequence": {
					"type": "integer",
					"format": "int32",
					"description": "The field location in the numerical order of the form fields on the form"
				},
				"formFieldId": {
					"type": "string",
					"description": "The unique identifier of the form field"
				},
				"hasLineSeparator": {
					"type": "boolean",
					"description": "Indicates whether the form field has a line separator"
				},
				"isCopyDownSource": {
					"type": "boolean",
					"description": "Indicates whether the form field is a copy down source for other fields"
				},
				"isRequired": {
					"type": "boolean",
					"description": "Whether a value is required for the form field"
				},
				"itemizationCopyDownAction": {
					"type": "string",
					"description": "Itemization Copy Down Action Only used by the child entries of itemizations. = ['ParentExpense', 'ChildExpense', 'None']"
				},
				"listId": {
					"type": "string",
					"description": "The unique identifier of the source list to be used for this form field"
				},
				"listLevel": {
					"type": "integer",
					"format": "int32",
					"description": "For connected list, the hierarchical position of this field in the list. For simple list or non-list items, this value will be blank"
				},
				"maximumLength": {
					"type": "integer",
					"format": "int32",
					"description": "The maximum length allowed for the form field"
				},
				"parentFieldId": {
					"type": "string",
					"description": " For connected list, the form field of the previous segment. For simple list or non-list items, this value will be blank"
				},
				"requiredForAutoSave": {
					"type": "boolean",
					"description": "A boolean value which indicates if this field is required to be populated to perform a save even if all required field values are not provided."
				},
				"targetFieldSettings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TargetFieldSetting"
					}
				},
				"tooltip": {
					"type": "string",
					"description": "The tool tip value of the form field"
				},
				"validationExpression": {
					"type": "string",
					"description": "The validation expression (Regular Expression) associated with the form field"
				},
				"validationMessage": {
					"type": "string",
					"description": "The failure message for the form field validation"
				}
			}
		},
		"PostingFeedbackSystemMessage": {
			"type": "object",
			"properties": {
				"concurTransactionLineItemId": {
					"type": "string",
					"description": "Concur transaction line item ID"
				},
				"messageId": {
					"type": "string",
					"description": "Message ID"
				},
				"messageLanguage": {
					"type": "string",
					"description": "Message language"
				},
				"messageLongText": {
					"type": "string",
					"description": "Message long text"
				},
				"messageShortText": {
					"type": "string",
					"description": "Message short text"
				}
			}
		},
		"NewAllocation": {
			"type": "object",
			"required": ["percentage"],
			"properties": {
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"isPercentEdited": {
					"type": "boolean",
					"description": "Whether the allocation percent has been edited"
				},
				"percentage": {
					"type": "number",
					"format": "double",
					"description": "The percentage of the total expense that this allocation represents"
				}
			}
		},
		"ReportAllocationResponse": {
			"type": "object",
			"required": ["allocationId", "expenseId", "isPercentEdited", "isSystemAllocation", "percentage"],
			"properties": {
				"accountCode": {
					"type": "string",
					"description": "The ledger account code associated with the allocation"
				},
				"allocationAmount": {
					"description": "The amount of the allocation",
					"$ref": "#/definitions/Amount"
				},
				"allocationId": {
					"type": "string",
					"description": " The unique identifier of the allocation"
				},
				"approvedAmount": {
					"description": "The pro-rated amount of the allocation approved for reimbursement based on the approved expense amount",
					"$ref": "#/definitions/Amount"
				},
				"claimedAmount": {
					"description": "The amount of the allocation requested for reimbursement",
					"$ref": "#/definitions/Amount"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"expenseId": {
					"type": "string",
					"description": "The unique identifier of the expense associated with the allocation"
				},
				"isPercentEdited": {
					"type": "boolean",
					"description": "Whether the user has modified the percentage distribution of the allocation, or has accepted the system calculated value."
				},
				"isSystemAllocation": {
					"type": "boolean",
					"description": "Whether the allocation is a system allocation, usually hidden from the user. If true, then the allocation cannot be modified."
				},
				"overLimitAccountCode": {
					"type": "string",
					"description": " The ledger account code associated with the allocation if it exceeds a pre-defined threshold, for example, the user’s travel allowance limit "
				},
				"percentage": {
					"type": "number",
					"format": "double",
					"description": "The percentage of the total expense that this allocation represents"
				}
			}
		},
		"EmployeeDisbursements": {
			"type": "object",
			"required": ["dueCompany"],
			"properties": {
				"dueCompany": {
					"description": "Total amount due company",
					"$ref": "#/definitions/Amount"
				},
				"otherDisbursements": {
					"type": "array",
					"description": "Other employee disbursements",
					"items": {
						"$ref": "#/definitions/Disbursement"
					}
				}
			}
		},
		"WorkflowStepInstance": {
			"type": "object",
			"required": ["roleCode", "sequenceOrder", "stepId", "stepInstanceId"],
			"properties": {
				"actionDate": {
					"type": "string",
					"format": "date-time",
					"description": "The UTC datetime when this step was acted upon (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ"
				},
				"approverId": {
					"type": "string",
					"description": "Approver Concur User Id"
				},
				"changedApproverId": {
					"type": "string",
					"description": "Concur User Id of the changed approver if the step has any change approver rule and it evaluates to true"
				},
				"delegateId": {
					"type": "string",
					"description": "Delegate Concur User Id"
				},
				"finalStatusId": {
					"type": "string",
					"description": "Final status for this step"
				},
				"hasStepBeenSkipped": {
					"type": "boolean",
					"description": "Boolean indicating if the step is skipped, true if any skip rule defined for this step evaluates to true"
				},
				"isCompleted": {
					"type": "boolean",
					"description": "Boolean indicating if the step has been completed"
				},
				"isDeletable": {
					"type": "boolean",
					"description": "Boolean indicating if the step can be deleted by the user (relevant only if the step is visible)"
				},
				"isEditable": {
					"type": "boolean",
					"description": "Boolean indicating if the step can be edited by the user (relevant only if the step is visible)"
				},
				"isRequired": {
					"type": "boolean",
					"description": "Boolean indicating if the step is required (relevant only if the step is visible)"
				},
				"isStepSkippable": {
					"type": "boolean",
					"description": "Boolean indicating if step can be skipped, true if skip rules are defined for the step"
				},
				"isUserAddedStepAllowed": {
					"type": "boolean",
					"description": "Boolean indicating if a step can be added (relevant only if the step is visible)"
				},
				"isVisible": {
					"type": "boolean",
					"description": "Boolean indicating if the step can be visible to the user"
				},
				"roleCode": {
					"type": "string",
					"description": "Role Code"
				},
				"sequenceOrder": {
					"type": "integer",
					"format": "int32",
					"description": "Sequence of this step in the workflow"
				},
				"stepId": {
					"type": "string",
					"description": "Identifier of the step that this is an instance of"
				},
				"stepInstanceId": {
					"type": "string",
					"description": "Step instance identifier"
				},
				"subWorkflowInstances": {
					"type": "array",
					"description": "List of sub workflow instances within this workflow step",
					"items": {
						"$ref": "#/definitions/SubWorkflowInstance"
					}
				}
			}
		},
		"SaveWorkflowInstanceResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the created/updated workflow instance resource"
				}
			}
		},
		"NewReport": {
			"type": "object",
			"required": ["name", "policyId", "reportSource"],
			"properties": {
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user"
				},
				"comment": {
					"type": "string",
					"description": "The expense report comment added by the user"
				},
				"country": {
					"type": "string",
					"description": "The country name, in the user's language"
				},
				"countryCode": {
					"type": "string",
					"description": "The location country ISO 3166-1 code (https://en.wikipedia.org/wiki/ISO_3166-1)"
				},
				"countrySubDivisionCode": {
					"type": "string",
					"description": "The location country sub division ISO 3166-2 code (https://en.wikipedia.org/wiki/ISO_3166-2)"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The end date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"name": {
					"type": "string",
					"description": "The expense report name input by the user"
				},
				"policy": {
					"type": "string",
					"description": "The policy name to which the report adheres to"
				},
				"policyId": {
					"type": "string",
					"description": "The unique identifier of the policy that applies to this report"
				},
				"reportDate": {
					"type": "string",
					"format": "date",
					"description": "The date (ISO-8601) assigned to the report by the user (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"reportSource": {
					"type": "string",
					"description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TR", "UI"]
				},
				"reportType": {
					"type": "string",
					"description": "This value identifies the method used to create the report. Statement refers to company billed statement reports and Auto-created refers to reports created by Expense Assistant.",
					"enum": ["Regular", "Reconciliation", "Statement", "AutoCreated"]
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The start date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				}
			}
		},
		"AllocationTotal": {
			"type": "object",
			"required": ["amount", "approvedAmount"],
			"properties": {
				"amount": {
					"description": "Total posted amount allocated to a particular combination of custom fields on the allocation (project or division or client, etc).",
					"$ref": "#/definitions/Amount"
				},
				"approvedAmount": {
					"description": "Total approved amount allocated to a particular combination of custom fields on the allocation (project or division or client, etc).",
					"$ref": "#/definitions/Amount"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the allocation based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				}
			}
		},
		"RideTrip": {
			"type": "object",
			"properties": {
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The start date for the ride (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"totalAmountPaid": {
					"description": "The total amount paid",
					"$ref": "#/definitions/Amount"
				},
				"vendorName": {
					"type": "string",
					"description": "The name of the vendor. Maximum length: 255 characters. Example: 'Yellow Cab'"
				}
			}
		},
		"CashAdvancePostResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the associated cash advances"
				}
			}
		},
		"ChangedFieldValue": {
			"type": "object",
			"required": ["currentValue", "fieldId", "previousValue"],
			"properties": {
				"currentValue": {
					"type": "object",
					"description": "The current value for the field"
				},
				"fieldId": {
					"type": "string",
					"description": "The unique identifier of the field whose value was modified"
				},
				"previousValue": {
					"type": "object",
					"description": "The previous value for the field"
				}
			}
		},
		"SubWorkflowInstance": {
			"type": "object",
			"required": ["processId", "processInstanceId"],
			"properties": {
				"currentSequence": {
					"type": "integer",
					"format": "int32",
					"description": "Sequence of the current step in the workflow instance"
				},
				"instanceType": {
					"type": "string",
					"description": "Type of workflow instance",
					"enum": ["COST_OBJECT_WORKFLOW", "BUDGET_OBJECT_WORKFLOW"]
				},
				"processId": {
					"type": "string",
					"description": "Id of the workflow process that this workflow is an instance of"
				},
				"processInstanceId": {
					"type": "string",
					"description": "Workflow instance id"
				},
				"subWorkflowStepInstances": {
					"type": "array",
					"description": "List of steps within the sub workflow instance",
					"items": {
						"$ref": "#/definitions/SubWorkflowStepInstance"
					}
				},
				"userAddedStepId": {
					"type": "string",
					"description": "The user added step identifier for the workflow"
				}
			}
		},
		"CopyReport": {
			"type": "object",
			"required": ["name"],
			"properties": {
				"firstExpenseTransactionDate": {
					"type": "string",
					"format": "date",
					"description": "Starting Date (ISO-8601) of Expense on New Report (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD.\n If you provide a date, the earliest expense on the new report will be given that date and dates for all other expenses will be adjusted based on that. Otherwise, each expense will be given the original expense date plus one day."
				},
				"name": {
					"type": "string",
					"description": "The expense report name input by the user"
				},
				"reportSource": {
					"type": "string",
					"description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TR", "UI"]
				}
			}
		},
		"ExchangeRate": {
			"type": "object",
			"required": ["operation", "value"],
			"properties": {
				"operation": {
					"type": "string",
					"description": "Exchange rate operation. Possible values: 'MULTIPLY' or 'DIVIDE'"
				},
				"value": {
					"type": "number",
					"format": "double",
					"description": "Exchange rate value"
				}
			}
		},
		"PostingFeedbackInfo": {
			"type": "object",
			"required": ["overallPostingStatusCode"],
			"properties": {
				"docId": {
					"type": "string",
					"description": "Document ID"
				},
				"overallPostingStatusCode": {
					"type": "string",
					"description": "Status of the posting feedback",
					"enum": ["success", "error"]
				},
				"postingDocs": {
					"type": "array",
					"description": "Posting documents",
					"items": {
						"$ref": "#/definitions/PostingFeedbackDocumentInfo"
					}
				},
				"systemMessages": {
					"type": "array",
					"description": "System messages",
					"items": {
						"$ref": "#/definitions/PostingFeedbackSystemMessage"
					}
				}
			},
			"description": "Posting Feedback Information"
		},
		"RequestsPostResponse": {
			"type": "object",
			"required": ["uri"],
			"properties": {
				"uri": {
					"type": "string",
					"description": "Uri of the associated requests"
				}
			}
		},
		"ReportDetails": {
			"type": "object",
			"required": ["amountCompanyPaid", "amountDueCompany", "amountDueCompanyCard", "amountDueEmployee", "amountNotApproved", "analyticsGroupId", "approvalStatus", "approvalStatusId", "approvedAmount", "canRecall", "claimedAmount", "concurAuditStatus", "creationDate", "currency", "currencyCode", "hierarchyNodeId", "isFinancialIntegrationEnabled", "isPaperReceiptsReceived", "isReceiptImageAvailable", "isReceiptImageRequired", "ledger", "ledgerId", "name", "paymentConfirmedAmount", "paymentStatus", "paymentStatusId", "personalAmount", "policy", "policyId", "reportFormId", "reportId", "reportTotal", "reportVersion", "userId"],
			"properties": {
				"allocationFormId": {
					"type": "string",
					"description": "The unique identifier of the allocation form defined on the policy for this report at the time of creation"
				},
				"amountCompanyPaid": {
					"description": "The amount paid by the company",
					"$ref": "#/definitions/Amount"
				},
				"amountDueCompany": {
					"description": "The amount that the employee owes the company",
					"$ref": "#/definitions/Amount"
				},
				"amountDueCompanyCard": {
					"description": "The amount that the employee/company owes the corporate card",
					"$ref": "#/definitions/Amount"
				},
				"amountDueEmployee": {
					"description": "The amount that the company owes the employee",
					"$ref": "#/definitions/Amount"
				},
				"amountNotApproved": {
					"description": "The amount that was not approved for the report",
					"$ref": "#/definitions/Amount"
				},
				"analyticsGroupId": {
					"type": "string",
					"description": "The unique identifier of the business intelligence hierarchy node"
				},
				"approvalStatus": {
					"type": "string",
					"description": "The report’s approval status (localized as per `accept-language` header)"
				},
				"approvalStatusId": {
					"type": "string",
					"description": "The unique identifier of the Approval Status (link out to table of Approval Status values)"
				},
				"approvedAmount": {
					"description": "The total amount of approved expenses in the report",
					"$ref": "#/definitions/Amount"
				},
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user"
				},
				"canRecall": {
					"type": "boolean",
					"description": "Whether the report can be recalled by the current user"
				},
				"canReopen": {
					"type": "boolean",
					"description": "Whether the report can be reopened after payment"
				},
				"claimedAmount": {
					"description": "The total amount of all non-personal expenses in the report",
					"$ref": "#/definitions/Amount"
				},
				"concurAuditStatus": {
					"type": "string",
					"description": "The status of audit for the report",
					"enum": ["PASS", "FAIL", "NOTR"]
				},
				"country": {
					"type": "string",
					"description": "The country name for the report (localized as per `accept-language` header)"
				},
				"countryCode": {
					"type": "string",
					"description": "The report country. Maximum 2 characters. Format: The ISO 3166-1 alpha-2 country code. Example: United States is US"
				},
				"countrySubDivisionCode": {
					"type": "string",
					"description": "The location country sub division ISO 3166-2 code (https://en.wikipedia.org/wiki/ISO_3166-2)"
				},
				"creationDate": {
					"type": "string",
					"format": "date-time",
					"description": "The UTC datetime when the user created the report (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ"
				},
				"currency": {
					"type": "string",
					"description": "The currency name in the user's language (localized as per `accept-language` header)"
				},
				"currencyCode": {
					"type": "string",
					"description": "The 3-letter ISO 4217 currency code (https://en.wikipedia.org/wiki/ISO_4217) for the expense report currency. Examples: USD - US dollars; BRL - Brazilian real; CAD - Canadian dollar; CHF - Swiss franc; EUR - Euro; GBO - Pound sterling; HKD - Hong Kong"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the report based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The end date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"hierarchyNodeId": {
					"type": "string",
					"description": "The unique identifier of the group hierarchy node for the report resource"
				},
				"isFinancialIntegrationEnabled": {
					"type": "boolean",
					"description": "Whether the Financial Integration setting has been enabled for this report"
				},
				"isPaperReceiptsReceived": {
					"type": "boolean",
					"description": "Whether paper receipts have been received for the report"
				},
				"isReceiptImageAvailable": {
					"type": "boolean",
					"description": "Whether the receipt image is available at the report level"
				},
				"isReceiptImageRequired": {
					"type": "boolean",
					"description": "Whether the receipt image is required at the report level"
				},
				"isReopened": {
					"type": "boolean",
					"description": "Whether the report is reopened"
				},
				"ledger": {
					"type": "string",
					"description": "The ledger name to which the report belongs (localized as per `accept-language` header)"
				},
				"ledgerId": {
					"type": "string",
					"description": "The unique identifier of the ledger"
				},
				"links": {
					"type": "array",
					"description": "Resource links related to this call",
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string",
					"description": "The expense report name input by the user"
				},
				"paymentConfirmedAmount": {
					"description": "The amount that was paid on the report",
					"$ref": "#/definitions/Amount"
				},
				"paymentStatus": {
					"type": "string",
					"description": "The report's payment status (localized as per `accept-language` header)"
				},
				"paymentStatusId": {
					"type": "string",
					"description": "The unique identifier of the payment status of the report (link to list of payment status id's)"
				},
				"personalAmount": {
					"description": "The total amount of expenses marked as personal on the report",
					"$ref": "#/definitions/Amount"
				},
				"policy": {
					"type": "string",
					"description": "The policy name to which the report adheres (localized as per `accept-language` header)"
				},
				"policyId": {
					"type": "string",
					"description": "The unique identifier of the policy that applies to this report"
				},
				"redirectFund": {
					"description": "Funds redirected to IBCP card",
					"$ref": "#/definitions/RedirectFund"
				},
				"reportDate": {
					"type": "string",
					"format": "date",
					"description": "The date (ISO-8601) assigned to the report by the user (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"reportFormId": {
					"type": "string",
					"description": "The unique identifier of the report form"
				},
				"reportId": {
					"type": "string",
					"description": "The unique identifier for the report resource"
				},
				"reportTotal": {
					"description": "The total amount on the Report",
					"$ref": "#/definitions/Amount"
				},
				"reportType": {
					"type": "string",
					"description": "This value identifies the method used to create the report. Statement refers to company billed statement reports and Auto-created refers to reports created by Expense Assistant.",
					"enum": ["Regular", "Reconciliation", "Statement", "AutoCreated"]
				},
				"reportVersion": {
					"type": "integer",
					"format": "int32",
					"description": "The current version of the report"
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The start date (ISO-8601) of the report as used for trip-based reporting (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"submitDate": {
					"type": "string",
					"format": "date-time",
					"description": "The UTC datetime when the user submitted the report (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ"
				},
				"userId": {
					"type": "string",
					"description": "The unique identifier of the Concur user who is the report owner"
				}
			}
		},
		"CopyReportResponse": {
			"type": "object",
			"required": ["offsetDays", "originalReportId", "uri"],
			"properties": {
				"offsetDays": {
					"type": "integer",
					"format": "int32",
					"description": "The number of days by which the newly created report startDate & endDate was incremented"
				},
				"originalReportId": {
					"type": "string",
					"description": "The reportId of the original report from which this report was copied"
				},
				"uri": {
					"type": "string",
					"description": "Uri of the report"
				}
			}
		},
		"CarTrip": {
			"type": "object",
			"properties": {
				"calculatedDailyRate": {
					"type": "number",
					"format": "double",
					"description": "The calculated car rental daily rate"
				},
				"carClass": {
					"type": "string",
					"description": "The car class. Maximum length: 10 characters. Examples: 'IDAD', 'ECMZ', 'PCAV', 'IGDV'"
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The car rental end date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"numberOfCars": {
					"type": "integer",
					"format": "int32",
					"description": "The number of cars rented. Minimum value: 1"
				},
				"numberOfRentalDays": {
					"type": "integer",
					"format": "int32",
					"description": "The number of car rental calculated days. Minimum value: 0"
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The car rental start date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD ."
				},
				"totalAmountPaid": {
					"description": "The total amount paid",
					"$ref": "#/definitions/Amount"
				},
				"vendorName": {
					"type": "string",
					"description": "The name of the car vendor. Maximum length: 255 characters. Example: 'ABC Rent A Car'"
				}
			}
		},
		"NewExpenseDetails": {
			"type": "object",
			"required": ["exchangeRate", "expenseType", "paymentType", "transactionAmount"],
			"properties": {
				"authorizationRequestExpenseId": {
					"type": "string",
					"description": "The authorization request expense id associated with the expense"
				},
				"businessPurpose": {
					"type": "string",
					"description": "The text input for the business purpose by the user. Maximum length: 64 characters"
				},
				"comment": {
					"type": "string",
					"description": "A comment that describes the expense. Maximum length: 2000 characters"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"exchangeRate": {
					"description": "The exchange rate data for the expense. Please refer to the 'ExchangeRate' object for more information",
					"$ref": "#/definitions/ExchangeRate"
				},
				"expenseSource": {
					"type": "string",
					"description": "The source of the expense. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TA - Travel Allowance, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TA", "TR", "UI"]
				},
				"expenseType": {
					"description": "The expense type data for the expense. Please refer to the 'ExpenseType' object for more information",
					"$ref": "#/definitions/ExpenseType"
				},
				"isExcludedFromCashAdvanceByUser": {
					"type": "boolean",
					"description": "Whether the user has excluded the expense from cash advance. Default value: false"
				},
				"isExpenseBillable": {
					"type": "boolean",
					"description": "Whether the expense is billable. Default value: false"
				},
				"isPersonalExpense": {
					"type": "boolean",
					"description": "Whether the expense is marked as personal (that is, non-reimbursable) by the user. Default value: false"
				},
				"location": {
					"description": "The location data of the expense. Please refer to the 'Location' object for more information",
					"$ref": "#/definitions/Location"
				},
				"merchantTaxId": {
					"type": "string",
					"description": "The merchant tax id for the expense. Maximum length: 64 characters"
				},
				"mileage": {
					"description": "The mileage data associated with the expense. Please refer to the 'Mileage' object for more information",
					"$ref": "#/definitions/Mileage"
				},
				"parentExpenseId": {
					"type": "string",
					"description": "The expense Id of the parent expense"
				},
				"paymentType": {
					"description": "The payment type data for the expense. Default's to group's default payment type else CASH. Please refer to the 'PaymentType' object for more information",
					"$ref": "#/definitions/PaymentType"
				},
				"receiptImageId": {
					"type": "string",
					"description": "The unique identifier of the image associated with the expense"
				},
				"receiptType": {
					"description": "Receipt type for the expense. Please refer to the 'ReceiptType' object for more information",
					"$ref": "#/definitions/ReceiptType"
				},
				"smartExpense": {
					"description": "The smart expense data associated with this expense. Please refer to the 'SmartExpense' object for more information",
					"$ref": "#/definitions/SmartExpense"
				},
				"tax": {
					"description": "The tax data associated with the expense",
					"$ref": "#/definitions/Tax"
				},
				"taxRateLocation": {
					"type": "string",
					"description": "Transaction location relative to the employee's home location as defined by their user profile. Possible values: FOREIGN - The expense transaction took place in foreign currency, HOME - The expense transaction took place in the reimbursement currency, OUT_OF_PROVINCE - The expense transaction took place outside the state jurisdiction. Default value: HOME",
					"enum": ["FOREIGN", "HOME", "OUT_OF_PROVINCE"]
				},
				"transactionAmount": {
					"description": "The amount of the expense, in the transaction currency paid to the vendor",
					"$ref": "#/definitions/Amount"
				},
				"transactionDate": {
					"type": "string",
					"format": "date",
					"description": "The transaction date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"travel": {
					"description": "The travel data associated with the expense. Please refer to the 'Travel' object for more information",
					"$ref": "#/definitions/Travel"
				},
				"travelAllowance": {
					"description": "The travel allowance data associated with the expense. Please refer to the 'TarvelAllowance' object for more information",
					"$ref": "#/definitions/TravelAllowance"
				},
				"vendor": {
					"description": "The vendor data for the expense. Please refer to the 'Vendor' object for more information",
					"$ref": "#/definitions/Vendor"
				}
			}
		},
		"AllocationFavoritePostResponse": {
			"type": "object",
			"required": ["id", "uri"],
			"properties": {
				"id": {
					"type": "string",
					"description": "Unique ID of the Allocation Favorite"
				},
				"uri": {
					"type": "string",
					"description": "URI of the Allocation Favorite"
				}
			}
		},
		"AllocationDeltas": {
			"type": "object",
			"required": ["allocationId"],
			"properties": {
				"allocationId": {
					"type": "string",
					"description": "The unique identifier for the allocation"
				},
				"changedFieldValues": {
					"type": "array",
					"description": "This is an array of allocation object fields whose values has been modified after the report was reopened",
					"items": {
						"$ref": "#/definitions/ChangedFieldValue"
					}
				}
			}
		},
		"WorkflowTransitionRequest": {
			"type": "object",
			"properties": {
				"comment": {
					"type": "string",
					"description": "Approver Comments"
				},
				"reportSource": {
					"type": "string",
					"description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TR", "UI"]
				},
				"statusId": {
					"type": "string",
					"description": "Status that will be assigned to the report by this workflow transition"
				}
			}
		},
		"ReceiptType": {
			"type": "object",
			"required": ["id"],
			"properties": {
				"id": {
					"type": "string",
					"description": "The unique identifier for the receipt type. Possible values: N - No Receipt, R - Regular Receipt, T - Tax Receipt. Default value: N"
				},
				"status": {
					"type": "string",
					"description": "Receipt status (localized as per `accept-language` header)"
				}
			}
		},
		"Allocation": {
			"type": "object",
			"required": ["allocationId", "expenseId", "isSystemAllocation", "percentage"],
			"properties": {
				"accountCode": {
					"type": "string",
					"description": "The ledger account code associated with the allocation"
				},
				"allocationAmount": {
					"description": "The amount of the allocation",
					"$ref": "#/definitions/Amount"
				},
				"allocationId": {
					"type": "string",
					"description": " The unique identifier of the allocation"
				},
				"approvedAmount": {
					"description": "The pro-rated amount of the allocation approved for reimbursement based on the approved expense amount",
					"$ref": "#/definitions/Amount"
				},
				"claimedAmount": {
					"description": "The amount of the allocation requested for reimbursement",
					"$ref": "#/definitions/Amount"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the allocation based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"expenseId": {
					"type": "string",
					"description": "The unique identifier of the expense associated with the allocation"
				},
				"isPercentEdited": {
					"type": "boolean",
					"description": "Whether the allocation percent has been edited"
				},
				"isSystemAllocation": {
					"type": "boolean",
					"description": "Whether the allocation is a system allocation, usually hidden from the user. If displayed to the user, should be read-only"
				},
				"overLimitAccountCode": {
					"type": "string",
					"description": " The ledger account code associated with the allocation if it exceeds a pre-defined threshold, for example, the user’s travel allowance limit"
				},
				"percentage": {
					"type": "number",
					"format": "double",
					"description": "The percentage of the total expense that this allocation represents"
				}
			}
		},
		"UpdateReportAllocation": {
			"type": "object",
			"required": ["allocation", "expenseIds"],
			"properties": {
				"allocation": {
					"description": "This is an allocation custom data object to be updated.",
					"$ref": "#/definitions/UpdateAllocation"
				},
				"expenseIds": {
					"type": "array",
					"description": "This is an array of unique identifiers of expenses within this report that are being updated",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"UtilizedBalanceDue": {
			"type": "object",
			"required": ["amount", "reportId"],
			"properties": {
				"amount": {
					"$ref": "#/definitions/Amount"
				},
				"reportId": {
					"type": "string"
				}
			}
		},
		"PaymentType": {
			"type": "object",
			"required": ["id"],
			"properties": {
				"code": {
					"type": "string",
					"description": "The code of the payment type"
				},
				"id": {
					"type": "string",
					"description": "The unique identifier of the Payment type. Maximum length: 4 characters. Example: 'CASH'"
				},
				"name": {
					"type": "string",
					"description": "The name of the payment type (localized as per `accept-language` header)"
				}
			}
		},
		"TravelAllowance": {
			"type": "object",
			"properties": {
				"dailyLimitAmount": {
					"type": "number",
					"format": "double",
					"description": "The allowed amount based on government travel allowance rates"
				},
				"dailyTravelAllowanceId": {
					"type": "string",
					"description": "The fixed daily travel allowance id associated with the expense. Maximum length: 32 characters"
				},
				"isExpensePartOfTravelAllowance": {
					"type": "boolean",
					"description": "Whether the expense is part of travel allowance. Default value: false"
				}
			}
		},
		"Disbursement": {
			"type": "object",
			"required": ["amount", "payeeName"],
			"properties": {
				"amount": {
					"$ref": "#/definitions/Amount"
				},
				"payeeName": {
					"type": "string"
				}
			}
		},
		"ExpenseTaxSummary": {
			"type": "object",
			"properties": {
				"netAdjustedTaxAmount": {
					"description": "Net adjusted tax amount",
					"$ref": "#/definitions/Amount"
				},
				"netReclaimAdjustedAmount": {
					"description": "Net reclaim adjusted amount",
					"$ref": "#/definitions/Amount"
				},
				"netReclaimAmount": {
					"description": "Net reclaim amount",
					"$ref": "#/definitions/Amount"
				},
				"netTaxAmount": {
					"description": "Net tax amount",
					"$ref": "#/definitions/Amount"
				},
				"totalReclaimAdjustedAmount": {
					"description": "Total reclaim adjusted amount",
					"$ref": "#/definitions/Amount"
				},
				"totalReclaimPostedAmount": {
					"description": "Total reclaim posted amount",
					"$ref": "#/definitions/Amount"
				},
				"totalTaxAdjustedAmount": {
					"description": "Total tax adjusted amount",
					"$ref": "#/definitions/Amount"
				},
				"totalTaxPostedAmount": {
					"description": "Total tax posted amount",
					"$ref": "#/definitions/Amount"
				},
				"vatTaxTotal": {
					"description": "VAT tax total amount",
					"$ref": "#/definitions/Amount"
				}
			}
		},
		"ExpenseAttendees": {
			"type": "object",
			"properties": {
				"expenseAttendeeList": {
					"type": "array",
					"description": "The list of attendees associated with the expense. Maximum attendees: 500 ",
					"items": {
						"$ref": "#/definitions/ExpenseAttendee"
					}
				},
				"noShowAttendeeCount": {
					"type": "integer",
					"format": "int32",
					"description": "The number of attendees that were planned but did not show up. Default value: 0"
				}
			}
		},
		"Comments": {
			"type": "object",
			"required": ["comment"],
			"properties": {
				"comment": {
					"type": "string",
					"description": "The comments input on the report/expense by all users"
				}
			}
		},
		"UpdateAllocation": {
			"type": "object",
			"properties": {
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				}
			}
		},
		"ExpenseAttendee": {
			"type": "object",
			"required": ["attendeeId"],
			"properties": {
				"associatedAttendeeCount": {
					"type": "integer",
					"format": "int32",
					"description": "The count of total attendees. A count greater than 1 means there are unnamed attendees associated with this expense-attendee record. Default value: 1"
				},
				"attendeeId": {
					"type": "string",
					"description": "The unique identifier of the associated expense attendee within Concur"
				},
				"customData": {
					"type": "array",
					"description": "The set of data the custom fields contain for the attendee based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"isAmountUserEdited": {
					"type": "boolean",
					"description": "This field indicates if the amount value for the attendee on this expense was ever manually edited by the end user. Default value: false"
				},
				"isTraveling": {
					"type": "boolean",
					"description": "Whether the attendee was traveling when the expense was incurred, used for FBT tax calculations"
				},
				"transactionAmount": {
					"type": "number",
					"format": "double",
					"description": "The portion of the expense transaction amount assigned to this attendee for both individual expense tracking and attendee totals across time periods"
				},
				"versionNumber": {
					"type": "integer",
					"format": "int32",
					"description": "The version number of the attendee. This field value may always be 1, depending on the configuration. Default value: 1"
				}
			}
		},
		"Vendor": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string",
					"description": "The description of the vendor. Maximum length: 64 characters"
				},
				"id": {
					"type": "string",
					"description": "The unique identifier of the vendor"
				},
				"name": {
					"type": "string",
					"description": "The name of the vendor"
				}
			}
		},
		"SubmitReportRequest": {
			"type": "object",
			"properties": {
				"reportSource": {
					"type": "string",
					"description": "The source of the report. Possible values: EA - Expense Assistant, MOB - Mobile, OTHER - Unknown, SE - Smart Expense, TR - Travel Request, UI - Web UI",
					"enum": ["EA", "MOB", "OTHER", "SE", "TR", "UI"]
				}
			}
		},
		"Date": {
			"type": "object",
			"properties": {
				"date": {
					"type": "integer",
					"format": "int32"
				},
				"day": {
					"type": "integer",
					"format": "int32"
				},
				"hours": {
					"type": "integer",
					"format": "int32"
				},
				"minutes": {
					"type": "integer",
					"format": "int32"
				},
				"month": {
					"type": "integer",
					"format": "int32"
				},
				"seconds": {
					"type": "integer",
					"format": "int32"
				},
				"time": {
					"type": "integer",
					"format": "int64"
				},
				"timezoneOffset": {
					"type": "integer",
					"format": "int32"
				},
				"year": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"Travel": {
			"type": "object",
			"properties": {
				"airlineFeeTypeCode": {
					"type": "string",
					"description": "Airline fee type code. Possible values: 'BAGGS', 'BUSIN', 'OBENT', 'ONBRD', 'OTHER', 'PRACC', 'SEATS', 'TKCHG', 'UPGRD'"
				},
				"airlineFeeTypeName": {
					"type": "string",
					"description": "The localized airline fee type name"
				},
				"airlineServiceClassCode": {
					"type": "string",
					"description": "The airline service class code. Possible values: 'BUSIN', 'COACH', 'FIRST'"
				},
				"airlineServiceClassName": {
					"type": "string",
					"description": "The localized airline service class name"
				},
				"carRentalDays": {
					"type": "integer",
					"format": "int32",
					"description": "The number of days car was rented. Minimum value: 0"
				},
				"endLocation": {
					"type": "string",
					"description": "Location where the travel ended. Maximum length: 100 characters"
				},
				"hotelCheckinDate": {
					"type": "string",
					"format": "date",
					"description": "The hotel checkin date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"hotelCheckoutDate": {
					"type": "string",
					"format": "date",
					"description": "The hotel checkout date (ISO-8601) of the expense (https://en.wikipedia.org/wiki/ISO_8601). Format: YYYY-MM-DD"
				},
				"startLocation": {
					"type": "string",
					"description": "Location where the travel started. Maximum length: 100 characters"
				},
				"ticketNumber": {
					"type": "string",
					"description": "The ticket number associated with the travel. Maximum length: 32 characters"
				}
			}
		},
		"NewReportAllocation": {
			"type": "object",
			"required": ["percentage"],
			"properties": {
				"allocationId": {
					"type": "string",
					"description": "The unique identifier of the allocation"
				},
				"customData": {
					"type": "array",
					"description": "This is a set of data that the custom fields contain for the resource based on the configuration. This set might be empty if no custom fields are configured",
					"items": {
						"$ref": "#/definitions/CustomData"
					}
				},
				"isPercentEdited": {
					"type": "boolean",
					"description": "Whether the allocation percent has been edited"
				},
				"percentage": {
					"type": "number",
					"format": "double",
					"description": "The percentage of the total expense that this allocation represents"
				}
			}
		},
		"CustomField": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string",
					"description": "The short code for the list item. For non-list fields, this value will be blank"
				},
				"isValid": {
					"type": "boolean",
					"description": "Whether the value returned is valid or not. This value is returned for custom fields of all data types and is specifically evaluated for list items to represent the current status. Default value: true"
				},
				"listItemId": {
					"type": "string",
					"description": "The unique identifier of the list item. For non-list fields, this value will be blank"
				},
				"value": {
					"type": "string",
					"description": "The value of the non-list item. For list fields, this value will be blank. Maximum length: 64 characters"
				}
			}
		},
		"PostingFeedbackDocumentInfo": {
			"type": "object",
			"properties": {
				"companyId": {
					"type": "string",
					"description": "Company ID"
				},
				"documentNumber": {
					"type": "string",
					"description": "Document number"
				},
				"fiscalYear": {
					"type": "string",
					"description": "Fiscal year"
				},
				"paymentRelevantLineItems": {
					"type": "array",
					"description": "Payment relevant line items",
					"items": {
						"$ref": "#/definitions/PostingFeedbackLineItemInfo"
					}
				},
				"postingDate": {
					"type": "string",
					"description": "Posting date"
				}
			},
			"description": "Posting Feedback Document Information"
		},
		"ReportList": {
			"type": "object",
			"required": ["approvalStatus", "approvedAmount", "claimedAmount", "hasBlockingExceptions", "hasExceptions", "isApproved", "isEnabledForFinancialIntegration", "isPaymentConfirmed", "isPendingApproval", "isPendingDelegatorReview", "isPendingProcessor", "isPendingProcessorReview", "isSentBack", "isSentForPayment", "isSubmitted", "link", "name", "paymentStatus", "reportId", "reportTotal"],
			"properties": {
				"approvalStatus": {
					"type": "string",
					"description": "The report’s approval status, in the user’s language"
				},
				"approvedAmount": {
					"description": "The total amount of approved expenses in the report",
					"$ref": "#/definitions/Amount"
				},
				"approver": {
					"description": "The current approver's name, on whom the report is pending approval",
					"$ref": "#/definitions/Employee"
				},
				"claimedAmount": {
					"description": "The total amount of all non-personal expenses in the report",
					"$ref": "#/definitions/Amount"
				},
				"endDate": {
					"type": "string",
					"format": "date",
					"description": "The report end date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"hasBlockingExceptions": {
					"type": "boolean",
					"description": "Whether the report has any exceptions that block it from being submitted"
				},
				"hasExceptions": {
					"type": "boolean",
					"description": "Whether the Report has any exceptions"
				},
				"isApproved": {
					"type": "boolean",
					"description": "Whether the report has been approved"
				},
				"isEnabledForFinancialIntegration": {
					"type": "boolean",
					"description": "Whether a report is enabled for financial integration"
				},
				"isEnabledForReopen": {
					"type": "boolean",
					"description": "Whether a report is enabled for reopen"
				},
				"isPaymentConfirmed": {
					"type": "boolean",
					"description": "Whether the report is past the payment confirmation workflow step"
				},
				"isPendingApproval": {
					"type": "boolean",
					"description": "Whether the report is pending any approval"
				},
				"isPendingDelegatorReview": {
					"type": "boolean",
					"description": "Whether a report created by a delegate is pending review by the employee"
				},
				"isPendingProcessor": {
					"type": "boolean",
					"description": "Whether the report is pending the processor status"
				},
				"isPendingProcessorReview": {
					"type": "boolean",
					"description": "Whether the report is pending the processor's review"
				},
				"isReopened": {
					"type": "boolean",
					"description": "Whether the report is reopened"
				},
				"isSentBack": {
					"type": "boolean",
					"description": "Whether the report is in sent back status"
				},
				"isSentForPayment": {
					"type": "boolean",
					"description": "Whether the report is past the sent for payment workflow step"
				},
				"isSubmitted": {
					"type": "boolean",
					"description": "Whether the report has been submitted by the employee"
				},
				"link": {
					"description": "Resource link to the report",
					"$ref": "#/definitions/Link"
				},
				"name": {
					"type": "string",
					"description": "The expense report name input by the user"
				},
				"paidDate": {
					"type": "string",
					"format": "date-time",
					"description": "The UTC datetime when the report got paid (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ"
				},
				"paymentStatus": {
					"type": "string",
					"description": "The report's payment status in the user's language"
				},
				"reportDate": {
					"type": "string",
					"format": "date",
					"description": "The date (ISO-8601) assigned to the report by the user (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"reportId": {
					"type": "string",
					"description": "The unique identifier for the report resource"
				},
				"reportTotal": {
					"description": "The total amount on the Report",
					"$ref": "#/definitions/Amount"
				},
				"reportType": {
					"type": "string",
					"description": "This value identifies the method used to create the report. Statement refers to company billed statement reports and Auto-created refers to reports created by Expense Assistant.",
					"enum": ["Regular", "Reconciliation", "Statement", "AutoCreated"]
				},
				"sentBackDate": {
					"type": "string",
					"format": "date-time",
					"description": "The UTC datetime on which the report was sent back to the employee (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ"
				},
				"startDate": {
					"type": "string",
					"format": "date",
					"description": "The report start date (ISO-8601) (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DD"
				},
				"submitDate": {
					"type": "string",
					"format": "date-time",
					"description": "The UTC datetime when the user submitted the report (https://en.wikipedia.org/wiki/ISO_8601).  Format: YYYY-MM-DDTHH:mm:ssZ"
				}
			}
		},
		"Location": {
			"type": "object",
			"properties": {
				"city": {
					"type": "string",
					"description": "The location city"
				},
				"countryCode": {
					"type": "string",
					"description": "The location country ISO 3166-1 code (https://en.wikipedia.org/wiki/ISO_3166-1)"
				},
				"countrySubDivisionCode": {
					"type": "string",
					"description": "The location country sub division ISO 3166-2 code (https://en.wikipedia.org/wiki/ISO_3166-2)"
				},
				"id": {
					"type": "string",
					"description": "The unique identifier of the location. When location id is specified (when creating or updating a resource), other location object fields will be ignored"
				},
				"name": {
					"type": "string",
					"description": "The location name (localized as per `accept-language` header)"
				}
			}
		}
	}
}
